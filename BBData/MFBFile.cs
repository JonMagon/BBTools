using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.Drawing;
using System.Drawing.Imaging;
using System.Runtime.InteropServices;

namespace BBData
{
    public class MFBFile
    {
        public List<Image> Entries { get; private set; } = new List<Image>();
        public int Width { get; private set; }
        public int Height { get; private set; }
        public Point Offset { get; private set; }
        public bool IsCompressed { get; private set; }
        public bool IsTransparent { get; private set; }

        public MFBFile(string filename, Palettes.TypePalette palette = Palettes.TypePalette.PALETTE)
            : this(File.ReadAllBytes(filename), palette) { }

        public MFBFile(byte[] data, Palettes.TypePalette palette = Palettes.TypePalette.PALETTE)
        {
            using (MemoryStream stream = new MemoryStream(data))
            {
                using (BinaryReader binr = new BinaryReader(stream, Encoding.ASCII))
                {
                    if (!binr.ReadChars(3).SequenceEqual("MFB"))
                        throw new Exception("File is corrupted. Bad signature.");

                    int version = int.Parse(new string(binr.ReadChars(3))); // 101

                    Width = binr.ReadInt16();
                    Height = binr.ReadInt16();

                    /* .text:00431500
                     * 
                     * if ( version < 101 || strstr(name, "maptile.mfb") || strstr(name, "hills.mfb") )
                       {
                           entry->x = entry->width / 2;
                           entry->y = entry->height;
                       }
                       else
                       {
                           y_1 = y;
                           entry->x = x;
                           entry->y = y_1;
                       } 
                    */
                    Offset = new Point(binr.ReadInt16(), binr.ReadInt16());

                    short flags = binr.ReadInt16(),
                          numsprites = binr.ReadInt16();

                    int spritesize = Width * Height;

                    IsTransparent = (flags & (byte)EntryFlags.Transparent) != 0;

                    if (IsCompressed = ((flags & (byte)EntryFlags.Compressed) != 0))
                        for (int i = 0; i < numsprites; i++)
                        {
                            int size = binr.ReadInt32();
                            Entries.Add(CreateImage(unRLE(binr.ReadBytes(size), spritesize),
                                palette));
                        }
                    else for (int i = 0; i < numsprites; i++)
                            Entries.Add(CreateImage(binr.ReadBytes(spritesize),
                                palette));
                }
            }
        }

        static byte[] unRLE(byte[] input, int spritesize)
        {
            byte[] output = new byte[spritesize];

            uint inPos = 0, outPos = 0;
            byte copyByte = input[0];
            while (outPos < output.Length)
            {
                if (input[inPos] == copyByte)
                {
                    byte count = input[++inPos];
                    ++inPos;

                    while (count-- != 0)
                        output[outPos++] = copyByte;
                }
                else
                {
                    output[outPos++] = input[inPos++];
                }
            }
            return output;
        }

        private Image CreateImage(byte[] buffer, Palettes.TypePalette palette)
        {
            Image _img;
            Bitmap bmp = new Bitmap(Width, Height, PixelFormat.Format8bppIndexed);
            byte[] bytespalette = Palettes.GetPalette(palette);
            ColorPalette typepalette = bmp.Palette;

            for (int i = 0; i < typepalette.Entries.Length; i++)
                typepalette.Entries[i] = System.Drawing.Color.FromArgb(
                    red: bytespalette[4 * i],
                    green: bytespalette[4 * i + 1],
                    blue: bytespalette[4 * i + 2],
                    alpha: bytespalette[4 * i + 3]
                    );

            bmp.Palette = typepalette;

            System.Drawing.Rectangle rect = new System.Drawing.Rectangle(System.Drawing.Point.Empty, bmp.Size);
            BitmapData bmpData = bmp.LockBits(rect, ImageLockMode.ReadWrite, bmp.PixelFormat);
            try
            {
                 for (int r = 0; r < Height; r++)
                     Marshal.Copy(buffer, Width * r, bmpData.Scan0 + r * bmpData.Stride, Width);
            }
            finally
            {
                bmp.UnlockBits(bmpData);
                _img = (Image)bmp;
            }


            if (IsTransparent)
            {
                System.Drawing.Color pixel = bmp.GetPixel(0, 0);
                bmp.MakeTransparent(System.Drawing.Color.FromArgb(255, pixel.R, pixel.G, pixel.B));
            }

            return _img;
        }

        enum EntryFlags
        {
            Transparent = 1,
            Compressed = 2,
            Unknown = 4
        }
    }

    // modified https://bitbucket.org/trass3r/openbb/full-commit/881d183eda96/openbb/io/palette.d
    public class Palettes
    {
        public enum TypePalette
        {
            PALETTE,
            AUTUMN_PALETTE,
            WINTER_PALETTE,
            SUMMER_PALETTE,
            SPRING_PALETTE,
            MISSIONPALETTE,
            LOADINGPALETTE,
            TITLEPALETTE
        }

        public static byte[] GetPalette(TypePalette type)
        {
            switch (type)
            {
                case TypePalette.PALETTE:
                    return PALETTE;
                case TypePalette.AUTUMN_PALETTE:
                    return AUTUMN_PALETTE;
                case TypePalette.WINTER_PALETTE:
                    return WINTER_PALETTE;
                case TypePalette.SUMMER_PALETTE:
                    return SUMMER_PALETTE;
                case TypePalette.SPRING_PALETTE:
                    return SPRING_PALETTE;
                case TypePalette.MISSIONPALETTE:
                    return MISSIONPALETTE;
                case TypePalette.LOADINGPALETTE:
                    return LOADINGPALETTE;
                case TypePalette.TITLEPALETTE:
                    return TITLEPALETTE;
            }
            return null;
        }

        static byte[] PALETTE = new byte[] {
            0x00, 0x00, 0x00, 0xFF, 0xE3, 0x53, 0x00, 0xFF,
            0xCF, 0x4B, 0x07, 0xFF, 0xBF, 0x43, 0x0F, 0xFF,
            0xAB, 0x3F, 0x17, 0xFF, 0x9B, 0x3B, 0x1B, 0xFF,
            0x87, 0x33, 0x1B, 0xFF, 0x6F, 0x2B, 0x1B, 0xFF,
            0x17, 0x93, 0x0F, 0xFF, 0x13, 0x83, 0x0F, 0xFF,
            0x13, 0x77, 0x0F, 0xFF, 0x0F, 0x6B, 0x13, 0xFF,
            0x0F, 0x5B, 0x13, 0xFF, 0x0F, 0x4F, 0x13, 0xFF,
            0x0F, 0x43, 0x13, 0xFF, 0xE7, 0xE3, 0xEF, 0xFF,
            0xAF, 0xAF, 0xAF, 0xFF, 0xA3, 0xA3, 0xA3, 0xFF,
            0x97, 0x97, 0x97, 0xFF, 0x8B, 0x8B, 0x8B, 0xFF,
            0x7F, 0x7F, 0x7F, 0xFF, 0x77, 0x77, 0x77, 0xFF,
            0x6B, 0x6B, 0x6B, 0xFF, 0x5F, 0x5F, 0x5F, 0xFF,
            0x53, 0x53, 0x53, 0xFF, 0x47, 0x47, 0x47, 0xFF,
            0x3F, 0x3F, 0x3F, 0xFF, 0x33, 0x33, 0x33, 0xFF,
            0x27, 0x27, 0x27, 0xFF, 0x1B, 0x1B, 0x1B, 0xFF,
            0x0F, 0x0F, 0x0F, 0xFF, 0x07, 0x07, 0x07, 0xFF,
            0xFF, 0xEF, 0xEF, 0xFF, 0xF7, 0xC3, 0xC3, 0xFF,
            0xEF, 0x9B, 0x9B, 0xFF, 0xE7, 0x77, 0x77, 0xFF,
            0x0F, 0xA7, 0x83, 0xFF, 0x0B, 0x9B, 0x77, 0xFF,
            0x0B, 0x93, 0x6B, 0xFF, 0x07, 0x87, 0x63, 0xFF,
            0x07, 0x7F, 0x53, 0xFF, 0x0F, 0x73, 0x4B, 0xFF,
            0x17, 0x5F, 0x37, 0xFF, 0x73, 0x00, 0x00, 0xFF,
            0x63, 0x00, 0x00, 0xFF, 0x4F, 0x00, 0x00, 0xFF,
            0x3B, 0x00, 0x00, 0xFF, 0x2B, 0x00, 0x00, 0xFF,
            0xFF, 0xFF, 0xFB, 0xFF, 0xD3, 0x1B, 0x1B, 0xFF,
            0xBF, 0x1B, 0x1B, 0xFF, 0xAB, 0x1B, 0x1B, 0xFF,
            0x97, 0x17, 0x17, 0xFF, 0x83, 0x17, 0x17, 0xFF,
            0x6F, 0x13, 0x13, 0xFF, 0x5F, 0x13, 0x13, 0xFF,
            0xE7, 0xEB, 0xEF, 0xFF, 0xDB, 0xE3, 0xE7, 0xFF,
            0xCF, 0xDB, 0xE3, 0xFF, 0xC7, 0xD3, 0xDB, 0xFF,
            0xBB, 0xC7, 0xD7, 0xFF, 0xAF, 0xBF, 0xCF, 0xFF,
            0xA7, 0xBB, 0xCB, 0xFF, 0x9F, 0xB3, 0xC7, 0xFF,
            0x9B, 0xFF, 0x97, 0xFF, 0x87, 0xEF, 0x83, 0xFF,
            0x77, 0xE3, 0x73, 0xFF, 0x67, 0xD7, 0x63, 0xFF,
            0x57, 0xC7, 0x57, 0xFF, 0x4B, 0xBB, 0x47, 0xFF,
            0x3F, 0xAF, 0x3B, 0xFF, 0x33, 0x9F, 0x33, 0xFF,
            0x27, 0x93, 0x27, 0xFF, 0x1F, 0x87, 0x1F, 0xFF,
            0x17, 0x77, 0x17, 0xFF, 0x0F, 0x6B, 0x0F, 0xFF,
            0x0B, 0x5F, 0x07, 0xFF, 0x07, 0x4F, 0x07, 0xFF,
            0x00, 0x43, 0x00, 0xFF, 0x00, 0x2F, 0x00, 0xFF,
            0x27, 0x27, 0x87, 0xFF, 0x1F, 0x1B, 0x63, 0xFF,
            0x9F, 0x9F, 0xEF, 0xFF, 0x93, 0x93, 0xF7, 0xFF,
            0x7F, 0x7F, 0xE7, 0xFF, 0x73, 0x73, 0xE3, 0xFF,
            0x6B, 0x6B, 0xDB, 0xFF, 0x6F, 0x6B, 0xC7, 0xFF,
            0x53, 0x53, 0xB7, 0xFF, 0x3F, 0x3F, 0xA3, 0xFF,
            0x1B, 0x6B, 0x53, 0xFF, 0x13, 0x5B, 0x43, 0xFF,
            0x0B, 0x4F, 0x37, 0xFF, 0x07, 0x3F, 0x27, 0xFF,
            0x00, 0x2F, 0x1B, 0xFF, 0x00, 0x23, 0x13, 0xFF,
            0xF3, 0xB3, 0x7B, 0xFF, 0xB3, 0x9F, 0x67, 0xFF,
            0xA3, 0x8F, 0x5B, 0xFF, 0x93, 0x83, 0x4F, 0xFF,
            0x87, 0x77, 0x43, 0xFF, 0x77, 0x6B, 0x37, 0xFF,
            0x67, 0x5F, 0x2F, 0xFF, 0x5B, 0x53, 0x27, 0xFF,
            0x7F, 0x8B, 0x2B, 0xFF, 0x6F, 0x7B, 0x1F, 0xFF,
            0x63, 0x6F, 0x17, 0xFF, 0x53, 0x5F, 0x0F, 0xFF,
            0x43, 0x4F, 0x07, 0xFF, 0x37, 0x43, 0x07, 0xFF,
            0x2B, 0x33, 0x00, 0xFF, 0x1F, 0x27, 0x00, 0xFF,
            0xD7, 0xFF, 0xD7, 0xFF, 0x9F, 0xFF, 0x9F, 0xFF,
            0x6B, 0xFF, 0x6B, 0xFF, 0x33, 0xFF, 0x33, 0xFF,
            0x00, 0xFF, 0x00, 0xFF, 0x1B, 0xD3, 0x1F, 0xFF,
            0x2F, 0xA7, 0x33, 0xFF, 0x37, 0x7F, 0x3B, 0xFF,
            0xEB, 0xAB, 0x73, 0xFF, 0xA7, 0x00, 0xA7, 0xFF,
            0x93, 0x00, 0x93, 0xFF, 0x83, 0x00, 0x83, 0xFF,
            0x73, 0x07, 0x73, 0xFF, 0x63, 0x07, 0x63, 0xFF,
            0x53, 0x07, 0x53, 0xFF, 0x43, 0x07, 0x43, 0xFF,
            0xC3, 0xFF, 0xFF, 0xFF, 0xA7, 0xFF, 0xFF, 0xFF,
            0x6F, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF,
            0x07, 0xDF, 0xDF, 0xFF, 0x13, 0xC3, 0xC3, 0xFF,
            0x17, 0xA3, 0xA3, 0xFF, 0x1B, 0x87, 0x87, 0xFF,
            0x3B, 0x3B, 0x9F, 0xFF, 0x37, 0x37, 0xA3, 0xFF,
            0x37, 0x33, 0x87, 0xFF, 0x2F, 0x2F, 0x6F, 0xFF,
            0x2B, 0x2B, 0x63, 0xFF, 0x27, 0x27, 0x57, 0xFF,
            0x1F, 0x1F, 0x43, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x07, 0x07, 0x77, 0xFF, 0x00, 0x00, 0x67, 0xFF,
            0x00, 0x00, 0x57, 0xFF, 0x9B, 0x9B, 0xCF, 0xFF,
            0x83, 0x83, 0xC3, 0xFF, 0x6B, 0x6B, 0xB3, 0xFF,
            0x5B, 0x5B, 0xA3, 0xFF, 0x47, 0x47, 0x93, 0xFF,
            0x37, 0x37, 0x87, 0xFF, 0x2B, 0x2B, 0x77, 0xFF,
            0x1F, 0x1F, 0x67, 0xFF, 0x13, 0x13, 0x5B, 0xFF,
            0x0B, 0x0B, 0x4B, 0xFF, 0x07, 0x07, 0x3B, 0xFF,
            0x00, 0x00, 0x2B, 0xFF, 0x00, 0x00, 0x1F, 0xFF,
            0x77, 0x3B, 0x00, 0xFF, 0x6B, 0x3B, 0x00, 0xFF,
            0x63, 0x3B, 0x00, 0xFF, 0x27, 0x2F, 0x4B, 0xFF,
            0x4B, 0x3F, 0x5F, 0xFF, 0x37, 0x3B, 0x57, 0xFF,
            0x27, 0x2B, 0x4B, 0xFF, 0x4F, 0x4F, 0x77, 0xFF,
            0x17, 0x1B, 0x37, 0xFF, 0x2F, 0x1B, 0x33, 0xFF,
            0x7B, 0x4B, 0x0F, 0xFF, 0x9B, 0x57, 0x0F, 0xFF,
            0xDB, 0xA7, 0x00, 0xFF, 0xCF, 0x7B, 0x27, 0xFF,
            0xFB, 0xBB, 0x83, 0xFF, 0xEF, 0xBF, 0x00, 0xFF,
            0xEB, 0xCF, 0xA3, 0xFF, 0x6F, 0x6F, 0x87, 0xFF,
            0x63, 0x63, 0x7B, 0xFF, 0x57, 0x57, 0x6F, 0xFF,
            0x4F, 0x4F, 0x67, 0xFF, 0x43, 0x43, 0x5B, 0xFF,
            0x3B, 0x3B, 0x53, 0xFF, 0x27, 0x27, 0x3B, 0xFF,
            0x93, 0x4F, 0x33, 0xFF, 0x87, 0x3F, 0x27, 0xFF,
            0x7B, 0x2F, 0x1B, 0xFF, 0x6F, 0x23, 0x13, 0xFF,
            0x5F, 0x17, 0x0B, 0xFF, 0x53, 0x0B, 0x07, 0xFF,
            0x47, 0x07, 0x00, 0xFF, 0x3B, 0x00, 0x00, 0xFF,
            0xDB, 0xDB, 0xC7, 0xFF, 0xC3, 0xC3, 0xAB, 0xFF,
            0xAB, 0xAB, 0x93, 0xFF, 0x93, 0x93, 0x7B, 0xFF,
            0x7F, 0x7F, 0x67, 0xFF, 0x67, 0x67, 0x4F, 0xFF,
            0x4F, 0x4F, 0x3B, 0xFF, 0x3B, 0x3B, 0x2B, 0xFF,
            0xD7, 0x9F, 0x5B, 0xFF, 0xCF, 0x8F, 0x4B, 0xFF,
            0xBF, 0x73, 0x3B, 0xFF, 0xB3, 0x5B, 0x27, 0xFF,
            0x9B, 0x57, 0x0F, 0xFF, 0x8F, 0x53, 0x1B, 0xFF,
            0x7B, 0x47, 0x0F, 0xFF, 0x6F, 0x3F, 0x00, 0xFF,
            0xA7, 0x77, 0x5B, 0xFF, 0x9B, 0x6F, 0x4F, 0xFF,
            0x93, 0x63, 0x43, 0xFF, 0x87, 0x5B, 0x3B, 0xFF,
            0x7F, 0x4F, 0x33, 0xFF, 0x73, 0x47, 0x27, 0xFF,
            0x6B, 0x3F, 0x23, 0xFF, 0x5F, 0x37, 0x1B, 0xFF,
            0x57, 0x2F, 0x13, 0xFF, 0x4B, 0x27, 0x0F, 0xFF,
            0x43, 0x23, 0x0B, 0xFF, 0x3B, 0x1B, 0x07, 0xFF,
            0x2F, 0x13, 0x00, 0xFF, 0x27, 0x0F, 0x00, 0xFF,
            0x1B, 0x0B, 0x00, 0xFF, 0x13, 0x07, 0x00, 0xFF,
            0xFF, 0xFF, 0xEB, 0xFF, 0xFF, 0xFB, 0xC7, 0xFF,
            0xFF, 0xF3, 0xA7, 0xFF, 0xFF, 0xEB, 0x83, 0xFF,
            0xFF, 0xDB, 0x63, 0xFF, 0xFF, 0xCB, 0x3F, 0xFF,
            0xFF, 0xB7, 0x1F, 0xFF, 0xFF, 0x9F, 0x00, 0xFF,
            0xE3, 0x7B, 0x00, 0xFF, 0xC7, 0x5B, 0x00, 0xFF,
            0xAF, 0x43, 0x00, 0xFF, 0x93, 0x2B, 0x00, 0xFF,
            0x7B, 0x1B, 0x00, 0xFF, 0x5F, 0x0B, 0x00, 0xFF,
            0x43, 0x07, 0x00, 0xFF, 0x2B, 0x00, 0x00, 0xFF,
            0xDF, 0xDF, 0xEB, 0xFF, 0xCB, 0xCB, 0xDB, 0xFF,
            0xB7, 0xB7, 0xCB, 0xFF, 0xA7, 0xA7, 0xBB, 0xFF,
            0x97, 0x97, 0xAB, 0xFF, 0x87, 0x87, 0x9F, 0xFF,
            0x77, 0x77, 0x8F, 0xFF, 0x67, 0x67, 0x7F, 0xFF,
            0x57, 0x57, 0x6F, 0xFF, 0x4B, 0x4B, 0x63, 0xFF,
            0x3F, 0x3F, 0x53, 0xFF, 0x2F, 0x2F, 0x43, 0xFF,
            0x23, 0x23, 0x33, 0xFF, 0x17, 0x17, 0x23, 0xFF,
            0x0F, 0x0F, 0x1B, 0xFF, 0x37, 0x47, 0x8F, 0xFF
            };

        static byte[] AUTUMN_PALETTE = new byte[] {
            0x00, 0x00, 0x00, 0xFF, 0xE3, 0x53, 0x00, 0xFF,
            0xCF, 0x4B, 0x07, 0xFF, 0xBF, 0x43, 0x0F, 0xFF,
            0xAB, 0x3F, 0x17, 0xFF, 0x9B, 0x3B, 0x1B, 0xFF,
            0x87, 0x33, 0x1B, 0xFF, 0x6F, 0x2B, 0x1B, 0xFF,
            0x17, 0x93, 0x0F, 0xFF, 0x13, 0x83, 0x0F, 0xFF,
            0x13, 0x77, 0x0F, 0xFF, 0x0F, 0x6B, 0x13, 0xFF,
            0x0F, 0x5B, 0x13, 0xFF, 0x0F, 0x4F, 0x13, 0xFF,
            0x0F, 0x43, 0x13, 0xFF, 0xE7, 0xE3, 0xEF, 0xFF,
            0xAF, 0xAF, 0xAF, 0xFF, 0xA3, 0xA3, 0xA3, 0xFF,
            0x97, 0x97, 0x97, 0xFF, 0x8B, 0x8B, 0x8B, 0xFF,
            0x7F, 0x7F, 0x7F, 0xFF, 0x77, 0x77, 0x77, 0xFF,
            0x6B, 0x6B, 0x6B, 0xFF, 0x5F, 0x5F, 0x5F, 0xFF,
            0x53, 0x53, 0x53, 0xFF, 0x47, 0x47, 0x47, 0xFF,
            0x3F, 0x3F, 0x3F, 0xFF, 0x33, 0x33, 0x33, 0xFF,
            0x27, 0x27, 0x27, 0xFF, 0x1B, 0x1B, 0x1B, 0xFF,
            0x0F, 0x0F, 0x0F, 0xFF, 0x07, 0x07, 0x07, 0xFF,
            0xFF, 0xEF, 0xEF, 0xFF, 0xF7, 0xC3, 0xC3, 0xFF,
            0xEF, 0x9B, 0x9B, 0xFF, 0xE7, 0x77, 0x77, 0xFF,
            0x0F, 0xA7, 0x83, 0xFF, 0x0B, 0x9B, 0x77, 0xFF,
            0x0B, 0x93, 0x6B, 0xFF, 0x07, 0x87, 0x63, 0xFF,
            0x07, 0x7F, 0x53, 0xFF, 0x0F, 0x73, 0x4B, 0xFF,
            0x17, 0x5F, 0x37, 0xFF, 0x73, 0x00, 0x00, 0xFF,
            0x63, 0x00, 0x00, 0xFF, 0x4F, 0x00, 0x00, 0xFF,
            0x3B, 0x00, 0x00, 0xFF, 0x2B, 0x00, 0x00, 0xFF,
            0xFF, 0xFF, 0xFB, 0xFF, 0xD3, 0x1B, 0x1B, 0xFF,
            0xBF, 0x1B, 0x1B, 0xFF, 0xAB, 0x1B, 0x1B, 0xFF,
            0x97, 0x17, 0x17, 0xFF, 0x83, 0x17, 0x17, 0xFF,
            0x6F, 0x13, 0x13, 0xFF, 0x5F, 0x13, 0x13, 0xFF,
            0xE7, 0xEB, 0xEF, 0xFF, 0xDB, 0xE3, 0xE7, 0xFF,
            0xCF, 0xDB, 0xE3, 0xFF, 0xC7, 0xD3, 0xDB, 0xFF,
            0xBB, 0xC7, 0xD7, 0xFF, 0xAF, 0xBF, 0xCF, 0xFF,
            0xA7, 0xBB, 0xCB, 0xFF, 0x9F, 0xB3, 0xC7, 0xFF,
            0xD3, 0xBF, 0x3B, 0xFF, 0xC7, 0xB7, 0x33, 0xFF,
            0xBB, 0xAF, 0x2B, 0xFF, 0xAF, 0xA7, 0x27, 0xFF,
            0xA7, 0x9F, 0x1F, 0xFF, 0x9B, 0x97, 0x1B, 0xFF,
            0x8F, 0x8F, 0x17, 0xFF, 0x83, 0x83, 0x13, 0xFF,
            0x77, 0x7B, 0x0F, 0xFF, 0x6B, 0x6F, 0x0B, 0xFF,
            0x5F, 0x63, 0x07, 0xFF, 0x53, 0x5B, 0x07, 0xFF,
            0x47, 0x4F, 0x00, 0xFF, 0x3B, 0x43, 0x00, 0xFF,
            0x2F, 0x37, 0x00, 0xFF, 0x27, 0x2F, 0x00, 0xFF,
            0x9F, 0x9F, 0xEF, 0xFF, 0x93, 0x93, 0xF7, 0xFF,
            0x7F, 0x7F, 0xE7, 0xFF, 0x73, 0x73, 0xE3, 0xFF,
            0x6B, 0x6B, 0xDB, 0xFF, 0x6F, 0x6B, 0xC7, 0xFF,
            0x53, 0x53, 0xB7, 0xFF, 0x3F, 0x3F, 0xA3, 0xFF,
            0x27, 0x27, 0x87, 0xFF, 0x1F, 0x1B, 0x63, 0xFF,
            0x1B, 0x6B, 0x53, 0xFF, 0x13, 0x5B, 0x43, 0x00,
            0x0B, 0x4F, 0x37, 0xFF, 0x07, 0x3F, 0x27, 0xFF,
            0x00, 0x2F, 0x1B, 0xFF, 0xFF, 0x23, 0x13, 0xFF,
            0xF3, 0xB3, 0x7B, 0xFF, 0xA3, 0x8F, 0x5B, 0xFF,
            0x97, 0x83, 0x4F, 0xFF, 0x8B, 0x7B, 0x47, 0xFF,
            0x7F, 0x6F, 0x3F, 0xFF, 0x73, 0x67, 0x37, 0xFF,
            0x67, 0x5B, 0x2F, 0xFF, 0x5B, 0x53, 0x27, 0xFF,
            0x7F, 0x8B, 0x2B, 0xFF, 0x6F, 0x7B, 0x1F, 0xFF,
            0x63, 0x6F, 0x17, 0xFF, 0x53, 0x5F, 0x0F, 0xFF,
            0x43, 0x4F, 0x07, 0xFF, 0x37, 0x43, 0x07, 0xFF,
            0x2B, 0x33, 0x00, 0xFF, 0x1F, 0x27, 0x00, 0xFF,
            0xD7, 0xFF, 0xD7, 0xFF, 0x9F, 0xFF, 0x9F, 0xFF,
            0x6B, 0xFF, 0x6B, 0xFF, 0x33, 0xFF, 0x33, 0xFF,
            0x00, 0xFF, 0x00, 0xFF, 0x1B, 0xD3, 0x1F, 0xFF,
            0x2F, 0xA7, 0x33, 0xFF, 0x37, 0x7F, 0x3B, 0xFF,
            0xEB, 0xAB, 0x73, 0xFF, 0xA7, 0x00, 0xA7, 0xFF,
            0x93, 0x00, 0x93, 0xFF, 0x83, 0x00, 0x83, 0xFF,
            0x73, 0x07, 0x73, 0xFF, 0x63, 0x07, 0x63, 0xFF,
            0x53, 0x07, 0x53, 0xFF, 0x43, 0x07, 0x43, 0xFF,
            0xC3, 0xFF, 0xFF, 0xFF, 0xA7, 0xFF, 0xFF, 0xFF,
            0x6F, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF,
            0x07, 0xDF, 0xDF, 0xFF, 0x13, 0xC3, 0xC3, 0xFF,
            0x17, 0xA3, 0xA3, 0xFF, 0x1B, 0x87, 0x87, 0xFF,
            0x3B, 0x3B, 0x9F, 0xFF, 0x37, 0x37, 0xA3, 0xFF,
            0x37, 0x33, 0x87, 0xFF, 0x2F, 0x2F, 0x6F, 0xFF,
            0x2B, 0x2B, 0x63, 0xFF, 0x27, 0x27, 0x57, 0xFF,
            0x1F, 0x1F, 0x43, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x07, 0x07, 0x77, 0xFF, 0x00, 0x00, 0x67, 0xFF,
            0x00, 0x00, 0x57, 0xFF, 0x9B, 0x9B, 0xCF, 0xFF,
            0x83, 0x83, 0xC3, 0xFF, 0x6B, 0x6B, 0xB3, 0xFF,
            0x5B, 0x5B, 0xA3, 0xFF, 0x47, 0x47, 0x93, 0xFF,
            0x37, 0x37, 0x87, 0xFF, 0x2B, 0x2B, 0x77, 0xFF,
            0x1F, 0x1F, 0x67, 0xFF, 0x13, 0x13, 0x5B, 0xFF,
            0x0B, 0x0B, 0x4B, 0xFF, 0x07, 0x07, 0x3B, 0xFF,
            0x00, 0x00, 0x2B, 0xFF, 0x00, 0x00, 0x1F, 0xFF,
            0x77, 0x3B, 0x00, 0xFF, 0x6B, 0x3B, 0x00, 0xFF,
            0x63, 0x3B, 0x00, 0xFF, 0x27, 0x2F, 0x4B, 0xFF,
            0x4B, 0x3F, 0x5F, 0xFF, 0x37, 0x3B, 0x57, 0xFF,
            0x27, 0x2B, 0x4B, 0xFF, 0x4F, 0x4F, 0x77, 0xFF,
            0x17, 0x1B, 0x37, 0xFF, 0x2F, 0x1B, 0x33, 0xFF,
            0x7B, 0x4B, 0x0F, 0xFF, 0x9B, 0x57, 0x0F, 0xFF,
            0xDB, 0xA7, 0x00, 0xFF, 0xCF, 0x7B, 0x27, 0xFF,
            0xFB, 0xBB, 0x83, 0xFF, 0xEF, 0xBF, 0x00, 0xFF,
            0xEB, 0xCF, 0xA3, 0xFF, 0x6F, 0x6F, 0x87, 0xFF,
            0x63, 0x63, 0x7B, 0xFF, 0x57, 0x57, 0x6F, 0xFF,
            0x4F, 0x4F, 0x67, 0xFF, 0x43, 0x43, 0x5B, 0xFF,
            0x3B, 0x3B, 0x53, 0xFF, 0x27, 0x27, 0x3B, 0xFF,
            0x93, 0x4F, 0x33, 0xFF, 0x87, 0x3F, 0x27, 0xFF,
            0x7B, 0x2F, 0x1B, 0xFF, 0x6F, 0x23, 0x13, 0xFF,
            0x5F, 0x17, 0x0B, 0xFF, 0x53, 0x0B, 0x07, 0xFF,
            0x47, 0x07, 0x00, 0xFF, 0x3B, 0x00, 0x00, 0xFF,
            0xDB, 0xDB, 0xC7, 0xFF, 0xC3, 0xC3, 0xAB, 0xFF,
            0xAB, 0xAB, 0x93, 0xFF, 0x93, 0x93, 0x7B, 0xFF,
            0x7F, 0x7F, 0x67, 0xFF, 0x67, 0x67, 0x4F, 0xFF,
            0x4F, 0x4F, 0x3B, 0xFF, 0x3B, 0x3B, 0x2B, 0xFF,
            0xD7, 0x9F, 0x5B, 0xFF, 0xCF, 0x8F, 0x4B, 0xFF,
            0xBF, 0x73, 0x3B, 0xFF, 0xB3, 0x5B, 0x27, 0xFF,
            0x9B, 0x57, 0x0F, 0xFF, 0x8F, 0x53, 0x1B, 0xFF,
            0x7B, 0x47, 0x0F, 0xFF, 0x6F, 0x3F, 0x00, 0xFF,
            0xA7, 0x77, 0x5B, 0xFF, 0x9B, 0x6F, 0x4F, 0xFF,
            0x93, 0x63, 0x43, 0xFF, 0x87, 0x5B, 0x3B, 0xFF,
            0x7F, 0x4F, 0x33, 0xFF, 0x73, 0x47, 0x27, 0xFF,
            0x6B, 0x3F, 0x23, 0xFF, 0x5F, 0x37, 0x1B, 0xFF,
            0x57, 0x2F, 0x13, 0xFF, 0x4B, 0x27, 0x0F, 0xFF,
            0x43, 0x23, 0x0B, 0xFF, 0x3B, 0x1B, 0x07, 0xFF,
            0x2F, 0x13, 0x00, 0xFF, 0x27, 0x0F, 0x00, 0xFF,
            0x1B, 0x0B, 0x00, 0xFF, 0x13, 0x07, 0x00, 0xFF,
            0xFF, 0xFF, 0xEB, 0xFF, 0xFF, 0xFB, 0xC7, 0xFF,
            0xFF, 0xF3, 0xA7, 0xFF, 0xFF, 0xEB, 0x83, 0xFF,
            0xFF, 0xDB, 0x63, 0xFF, 0xFF, 0xCB, 0x3F, 0xFF,
            0xFF, 0xB7, 0x1F, 0xFF, 0xFF, 0x9F, 0x00, 0xFF,
            0xE3, 0x7B, 0x00, 0xFF, 0xC7, 0x5B, 0x00, 0xFF,
            0xAF, 0x43, 0x00, 0xFF, 0x93, 0x2B, 0x00, 0xFF,
            0x7B, 0x1B, 0x00, 0xFF, 0x5F, 0x0B, 0x00, 0xFF,
            0x43, 0x07, 0x00, 0xFF, 0x2B, 0x00, 0x00, 0xFF,
            0xDF, 0xDF, 0xEB, 0xFF, 0xCB, 0xCB, 0xDB, 0xFF,
            0xB7, 0xB7, 0xCB, 0xFF, 0xA7, 0xA7, 0xBB, 0xFF,
            0x97, 0x97, 0xAB, 0xFF, 0x87, 0x87, 0x9F, 0xFF,
            0x77, 0x77, 0x8F, 0xFF, 0x67, 0x67, 0x7F, 0xFF,
            0x57, 0x57, 0x6F, 0xFF, 0x4B, 0x4B, 0x63, 0xFF,
            0x3F, 0x3F, 0x53, 0xFF, 0x2F, 0x2F, 0x43, 0xFF,
            0x23, 0x23, 0x33, 0xFF, 0x17, 0x17, 0x23, 0xFF,
            0x0F, 0x0F, 0x1B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
            };

        static byte[] WINTER_PALETTE = new byte[] {
            0x00, 0x00, 0x00, 0xFF, 0xE3, 0x53, 0x00, 0xFF,
            0xCF, 0x4B, 0x07, 0xFF, 0xBF, 0x43, 0x0F, 0xFF,
            0xAB, 0x3F, 0x17, 0xFF, 0x9B, 0x3B, 0x1B, 0xFF,
            0x87, 0x33, 0x1B, 0xFF, 0x6F, 0x2B, 0x1B, 0xFF,
            0x17, 0x93, 0x0F, 0xFF, 0x13, 0x83, 0x0F, 0xFF,
            0x13, 0x77, 0x0F, 0xFF, 0x0F, 0x6B, 0x13, 0xFF,
            0x0F, 0x5B, 0x13, 0xFF, 0x0F, 0x4F, 0x13, 0xFF,
            0x0F, 0x43, 0x13, 0xFF, 0xE7, 0xE3, 0xEF, 0xFF,
            0xAF, 0xAF, 0xAF, 0xFF, 0xA3, 0xA3, 0xA3, 0xFF,
            0x97, 0x97, 0x97, 0xFF, 0x8B, 0x8B, 0x8B, 0xFF,
            0x7F, 0x7F, 0x7F, 0xFF, 0x77, 0x77, 0x77, 0xFF,
            0x6B, 0x6B, 0x6B, 0xFF, 0x5F, 0x5F, 0x5F, 0xFF,
            0x53, 0x53, 0x53, 0xFF, 0x47, 0x47, 0x47, 0xFF,
            0x3F, 0x3F, 0x3F, 0xFF, 0x33, 0x33, 0x33, 0xFF,
            0x27, 0x27, 0x27, 0xFF, 0x1B, 0x1B, 0x1B, 0xFF,
            0x0F, 0x0F, 0x0F, 0xFF, 0x07, 0x07, 0x07, 0xFF,
            0xFF, 0xEF, 0xEF, 0xFF, 0xF7, 0xC3, 0xC3, 0xFF,
            0xEF, 0x9B, 0x9B, 0xFF, 0xE7, 0x77, 0x77, 0xFF,
            0x0F, 0xA7, 0x83, 0xFF, 0x0B, 0x9B, 0x77, 0xFF,
            0x0B, 0x93, 0x6B, 0xFF, 0x07, 0x87, 0x63, 0xFF,
            0x07, 0x7F, 0x53, 0xFF, 0x0F, 0x73, 0x4B, 0xFF,
            0x17, 0x5F, 0x37, 0xFF, 0x73, 0x00, 0x00, 0xFF,
            0x63, 0x00, 0x00, 0xFF, 0x4F, 0x00, 0x00, 0xFF,
            0x3B, 0x00, 0x00, 0xFF, 0x2B, 0x00, 0x00, 0xFF,
            0xFF, 0xFF, 0xFB, 0xFF, 0xD3, 0x1B, 0x1B, 0xFF,
            0xBF, 0x1B, 0x1B, 0xFF, 0xAB, 0x1B, 0x1B, 0xFF,
            0x97, 0x17, 0x17, 0xFF, 0x83, 0x17, 0x17, 0xFF,
            0x6F, 0x13, 0x13, 0xFF, 0x5F, 0x13, 0x13, 0xFF,
            0xE7, 0xEB, 0xEF, 0xFF, 0xDB, 0xE3, 0xE7, 0xFF,
            0xCF, 0xDB, 0xE3, 0xFF, 0xC7, 0xD3, 0xDB, 0xFF,
            0xBB, 0xC7, 0xD7, 0xFF, 0xAF, 0xBF, 0xCF, 0xFF,
            0xA7, 0xBB, 0xCB, 0xFF, 0x9F, 0xB3, 0xC7, 0xFF,
            0xD3, 0xBF, 0x3B, 0xFF, 0xC7, 0xB7, 0x33, 0xFF,
            0xBB, 0xAF, 0x2B, 0xFF, 0xAF, 0xA7, 0x27, 0xFF,
            0xA7, 0x9F, 0x1F, 0xFF, 0x9B, 0x97, 0x1B, 0xFF,
            0x8F, 0x8F, 0x17, 0xFF, 0x83, 0x83, 0x13, 0xFF,
            0x77, 0x7B, 0x0F, 0xFF, 0x6B, 0x6F, 0x0B, 0xFF,
            0x5F, 0x63, 0x07, 0xFF, 0x53, 0x5B, 0x07, 0xFF,
            0x47, 0x4F, 0x00, 0xFF, 0x3B, 0x43, 0x00, 0xFF,
            0x2F, 0x37, 0x00, 0xFF, 0x27, 0x2F, 0x00, 0xFF,
            0x9F, 0x9F, 0xEF, 0xFF, 0x93, 0x93, 0xF7, 0xFF,
            0x7F, 0x7F, 0xE7, 0xFF, 0x73, 0x73, 0xE3, 0xFF,
            0x6B, 0x6B, 0xDB, 0xFF, 0x6F, 0x6B, 0xC7, 0xFF,
            0x53, 0x53, 0xB7, 0xFF, 0x3F, 0x3F, 0xA3, 0xFF,
            0x27, 0x27, 0x87, 0xFF, 0x1F, 0x1B, 0x63, 0xFF,
            0x1B, 0x6B, 0x53, 0xFF, 0x13, 0x5B, 0x43, 0xFF,
            0x0B, 0x4F, 0x37, 0xFF, 0x07, 0x3F, 0x27, 0xFF,
            0x00, 0x2F, 0x1B, 0xFF, 0x00, 0x23, 0x13, 0xFF,
            0xF3, 0xB3, 0x7B, 0xFF, 0xA3, 0x8F, 0x5B, 0xFF,
            0x97, 0x83, 0x4F, 0xFF, 0x8B, 0x7B, 0x47, 0xFF,
            0x7F, 0x6F, 0x3F, 0xFF, 0x73, 0x67, 0x37, 0xFF,
            0x67, 0x5B, 0x2F, 0xFF, 0x5B, 0x53, 0x27, 0xFF,
            0x7F, 0x8B, 0x2B, 0xFF, 0x6F, 0x7B, 0x1F, 0xFF,
            0x63, 0x6F, 0x17, 0xFF, 0x53, 0x5F, 0x0F, 0xFF,
            0x43, 0x4F, 0x07, 0xFF, 0x37, 0x43, 0x07, 0xFF,
            0x2B, 0x33, 0x00, 0xFF, 0x1F, 0x27, 0x00, 0xFF,
            0xD7, 0xFF, 0xD7, 0xFF, 0x9F, 0xFF, 0x9F, 0xFF,
            0x6B, 0xFF, 0x6B, 0xFF, 0x33, 0xFF, 0x33, 0xFF,
            0x00, 0xFF, 0x00, 0xFF, 0x1B, 0xD3, 0x1F, 0xFF,
            0x2F, 0xA7, 0x33, 0xFF, 0x37, 0x7F, 0x3B, 0xFF,
            0xEB, 0xAB, 0x73, 0xFF, 0xA7, 0x00, 0xA7, 0xFF,
            0x93, 0x00, 0x93, 0xFF, 0x83, 0x00, 0x83, 0xFF,
            0x73, 0x07, 0x73, 0xFF, 0x63, 0x07, 0x63, 0xFF,
            0x53, 0x07, 0x53, 0xFF, 0x43, 0x07, 0x43, 0xFF,
            0xC3, 0xFF, 0xFF, 0xFF, 0xA7, 0xFF, 0xFF, 0xFF,
            0x6F, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF,
            0x07, 0xDF, 0xDF, 0xFF, 0x13, 0xC3, 0xC3, 0xFF,
            0x17, 0xA3, 0xA3, 0xFF, 0x1B, 0x87, 0x87, 0xFF,
            0x3B, 0x3B, 0x9F, 0xFF, 0x37, 0x37, 0xA3, 0xFF,
            0x37, 0x33, 0x87, 0xFF, 0x2F, 0x2F, 0x6F, 0xFF,
            0x2B, 0x2B, 0x63, 0xFF, 0x27, 0x27, 0x57, 0xFF,
            0x1F, 0x1F, 0x43, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x07, 0x07, 0x77, 0xFF, 0x00, 0x00, 0x67, 0xFF,
            0x00, 0x00, 0x57, 0xFF, 0x9B, 0x9B, 0xCF, 0xFF,
            0x83, 0x83, 0xC3, 0xFF, 0x6B, 0x6B, 0xB3, 0xFF,
            0x5B, 0x5B, 0xA3, 0xFF, 0x47, 0x47, 0x93, 0xFF,
            0x37, 0x37, 0x87, 0xFF, 0x2B, 0x2B, 0x77, 0xFF,
            0x1F, 0x1F, 0x67, 0xFF, 0x13, 0x13, 0x5B, 0xFF,
            0x0B, 0x0B, 0x4B, 0xFF, 0x07, 0x07, 0x3B, 0xFF,
            0x00, 0x00, 0x2B, 0xFF, 0x00, 0x00, 0x1F, 0xFF,
            0x77, 0x3B, 0x00, 0xFF, 0x6B, 0x3B, 0x00, 0xFF,
            0x63, 0x3B, 0x00, 0xFF, 0x27, 0x2F, 0x4B, 0xFF,
            0x4B, 0x3F, 0x5F, 0xFF, 0x37, 0x3B, 0x57, 0xFF,
            0x27, 0x2B, 0x4B, 0xFF, 0x4F, 0x4F, 0x77, 0xFF,
            0x17, 0x1B, 0x37, 0xFF, 0x2F, 0x1B, 0x33, 0xFF,
            0x7B, 0x4B, 0x0F, 0xFF, 0x9B, 0x57, 0x0F, 0xFF,
            0xDB, 0xA7, 0x00, 0xFF, 0xCF, 0x7B, 0x27, 0xFF,
            0xFB, 0xBB, 0x83, 0xFF, 0xEF, 0xBF, 0x00, 0xFF,
            0xEB, 0xCF, 0xA3, 0xFF, 0x6F, 0x6F, 0x87, 0xFF,
            0x63, 0x63, 0x7B, 0xFF, 0x57, 0x57, 0x6F, 0xFF,
            0x4F, 0x4F, 0x67, 0xFF, 0x43, 0x43, 0x5B, 0xFF,
            0x3B, 0x3B, 0x53, 0xFF, 0x27, 0x27, 0x3B, 0xFF,
            0x93, 0x4F, 0x33, 0xFF, 0x87, 0x3F, 0x27, 0xFF,
            0x7B, 0x2F, 0x1B, 0xFF, 0x6F, 0x23, 0x13, 0xFF,
            0x5F, 0x17, 0x0B, 0xFF, 0x53, 0x0B, 0x07, 0xFF,
            0x47, 0x07, 0x00, 0xFF, 0x3B, 0x00, 0x00, 0xFF,
            0xDB, 0xDB, 0xC7, 0xFF, 0xC3, 0xC3, 0xAB, 0xFF,
            0xAB, 0xAB, 0x93, 0xFF, 0x93, 0x93, 0x7B, 0xFF,
            0x7F, 0x7F, 0x67, 0xFF, 0x67, 0x67, 0x4F, 0xFF,
            0x4F, 0x4F, 0x3B, 0xFF, 0x3B, 0x3B, 0x2B, 0xFF,
            0xD7, 0x9F, 0x5B, 0xFF, 0xCF, 0x8F, 0x4B, 0xFF,
            0xBF, 0x73, 0x3B, 0xFF, 0xB3, 0x5B, 0x27, 0xFF,
            0x9B, 0x57, 0x0F, 0xFF, 0x8F, 0x53, 0x1B, 0xFF,
            0x7B, 0x47, 0x0F, 0xFF, 0x6F, 0x3F, 0x00, 0xFF,
            0xA7, 0x77, 0x5B, 0xFF, 0x9B, 0x6F, 0x4F, 0xFF,
            0x93, 0x63, 0x43, 0xFF, 0x87, 0x5B, 0x3B, 0xFF,
            0x7F, 0x4F, 0x33, 0xFF, 0x73, 0x47, 0x27, 0xFF,
            0x6B, 0x3F, 0x23, 0xFF, 0x5F, 0x37, 0x1B, 0xFF,
            0x57, 0x2F, 0x13, 0xFF, 0x4B, 0x27, 0x0F, 0xFF,
            0x43, 0x23, 0x0B, 0xFF, 0x3B, 0x1B, 0x07, 0xFF,
            0x2F, 0x13, 0x00, 0xFF, 0x27, 0x0F, 0x00, 0xFF,
            0x1B, 0x0B, 0x00, 0xFF, 0x13, 0x07, 0x00, 0xFF,
            0xFF, 0xFF, 0xEB, 0xFF, 0xFF, 0xFB, 0xC7, 0xFF,
            0xFF, 0xF3, 0xA7, 0xFF, 0xFF, 0xEB, 0x83, 0xFF,
            0xFF, 0xDB, 0x63, 0xFF, 0xFF, 0xCB, 0x3F, 0xFF,
            0xFF, 0xB7, 0x1F, 0xFF, 0xFF, 0x9F, 0x00, 0xFF,
            0xE3, 0x7B, 0x00, 0xFF, 0xC7, 0x5B, 0x00, 0xFF,
            0xAF, 0x43, 0x00, 0xFF, 0x93, 0x2B, 0x00, 0xFF,
            0x7B, 0x1B, 0x00, 0xFF, 0x5F, 0x0B, 0x00, 0xFF,
            0x43, 0x07, 0x00, 0xFF, 0x2B, 0x00, 0x00, 0xFF,
            0xDF, 0xDF, 0xEB, 0xFF, 0xCB, 0xCB, 0xDB, 0xFF,
            0xB7, 0xB7, 0xCB, 0xFF, 0xA7, 0xA7, 0xBB, 0xFF,
            0x97, 0x97, 0xAB, 0xFF, 0x87, 0x87, 0x9F, 0xFF,
            0x77, 0x77, 0x8F, 0xFF, 0x67, 0x67, 0x7F, 0xFF,
            0x57, 0x57, 0x6F, 0xFF, 0x4B, 0x4B, 0x63, 0xFF,
            0x3F, 0x3F, 0x53, 0xFF, 0x2F, 0x2F, 0x43, 0xFF,
            0x23, 0x23, 0x33, 0xFF, 0x17, 0x17, 0x23, 0xFF,
            0x0F, 0x0F, 0x1B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
            };

        static byte[] SUMMER_PALETTE = new byte[] {
            0x00, 0x00, 0x00, 0xFF, 0xE3, 0x53, 0x00, 0xFF,
            0xCF, 0x4B, 0x07, 0xFF, 0xBF, 0x43, 0x0F, 0xFF,
            0xAB, 0x3F, 0x17, 0xFF, 0x9B, 0x3B, 0x1B, 0xFF,
            0x87, 0x33, 0x1B, 0xFF, 0x6F, 0x2B, 0x1B, 0xFF,
            0x17, 0x93, 0x0F, 0xFF, 0x13, 0x83, 0x0F, 0xFF,
            0x13, 0x77, 0x0F, 0xFF, 0x0F, 0x6B, 0x13, 0xFF,
            0x0F, 0x5B, 0x13, 0xFF, 0x0F, 0x4F, 0x13, 0xFF,
            0x0F, 0x43, 0x13, 0xFF, 0xE7, 0xE3, 0xEF, 0xFF,
            0xAF, 0xAF, 0xAF, 0xFF, 0xA3, 0xA3, 0xA3, 0xFF,
            0x97, 0x97, 0x97, 0xFF, 0x8B, 0x8B, 0x8B, 0xFF,
            0x7F, 0x7F, 0x7F, 0xFF, 0x77, 0x77, 0x77, 0xFF,
            0x6B, 0x6B, 0x6B, 0xFF, 0x5F, 0x5F, 0x5F, 0xFF,
            0x53, 0x53, 0x53, 0xFF, 0x47, 0x47, 0x47, 0xFF,
            0x3F, 0x3F, 0x3F, 0xFF, 0x33, 0x33, 0x33, 0xFF,
            0x27, 0x27, 0x27, 0xFF, 0x1B, 0x1B, 0x1B, 0xFF,
            0x0F, 0x0F, 0x0F, 0xFF, 0x07, 0x07, 0x07, 0xFF,
            0xFF, 0xEF, 0xEF, 0xFF, 0xF7, 0xC3, 0xC3, 0xFF,
            0xEF, 0x9B, 0x9B, 0xFF, 0xE7, 0x77, 0x77, 0xFF,
            0x0F, 0xA7, 0x83, 0xFF, 0x0B, 0x9B, 0x77, 0xFF,
            0x0B, 0x93, 0x6B, 0xFF, 0x07, 0x87, 0x63, 0xFF,
            0x07, 0x7F, 0x53, 0xFF, 0x0F, 0x73, 0x4B, 0xFF,
            0x17, 0x5F, 0x37, 0xFF, 0x73, 0x00, 0x00, 0xFF,
            0x63, 0x00, 0x00, 0xFF, 0x4F, 0x00, 0x00, 0xFF,
            0x3B, 0x00, 0x00, 0xFF, 0x2B, 0x00, 0x00, 0xFF,
            0xFF, 0xFF, 0xFB, 0xFF, 0xD3, 0x1B, 0x1B, 0xFF,
            0xBF, 0x1B, 0x1B, 0xFF, 0xAB, 0x1B, 0x1B, 0xFF,
            0x97, 0x17, 0x17, 0xFF, 0x83, 0x17, 0x17, 0xFF,
            0x6F, 0x13, 0x13, 0xFF, 0x5F, 0x13, 0x13, 0xFF,
            0xE7, 0xEB, 0xEF, 0xFF, 0xDB, 0xE3, 0xE7, 0xFF,
            0xCF, 0xDB, 0xE3, 0xFF, 0xC7, 0xD3, 0xDB, 0xFF,
            0xBB, 0xC7, 0xD7, 0xFF, 0xAF, 0xBF, 0xCF, 0xFF,
            0xA7, 0xBB, 0xCB, 0xFF, 0x9F, 0xB3, 0xC7, 0xFF,
            0x9B, 0xFF, 0x97, 0xFF, 0x87, 0xEF, 0x83, 0xFF,
            0x77, 0xE3, 0x73, 0xFF, 0x67, 0xD7, 0x63, 0xFF,
            0x57, 0xC7, 0x57, 0xFF, 0x4B, 0xBB, 0x47, 0xFF,
            0x3F, 0xAF, 0x3B, 0xFF, 0x33, 0x9F, 0x33, 0xFF,
            0x27, 0x93, 0x27, 0xFF, 0x1F, 0x87, 0x1F, 0xFF,
            0x17, 0x77, 0x17, 0xFF, 0x0F, 0x6B, 0x0F, 0xFF,
            0x0B, 0x5F, 0x07, 0xFF, 0x07, 0x4F, 0x07, 0xFF,
            0x00, 0x43, 0x00, 0xFF, 0x00, 0x2F, 0x00, 0xFF,
            0x27, 0x27, 0x87, 0xFF, 0x1F, 0x1B, 0x63, 0xFF,
            0x9F, 0x9F, 0xEF, 0xFF, 0x93, 0x93, 0xF7, 0xFF,
            0x7F, 0x7F, 0xE7, 0xFF, 0x73, 0x73, 0xE3, 0xFF,
            0x6B, 0x6B, 0xDB, 0xFF, 0x6F, 0x6B, 0xC7, 0xFF,
            0x53, 0x53, 0xB7, 0xFF, 0x3F, 0x3F, 0xA3, 0xFF,
            0x1B, 0x6B, 0x53, 0xFF, 0x13, 0x5B, 0x43, 0xFF,
            0x0B, 0x4F, 0x37, 0xFF, 0x07, 0x3F, 0x27, 0xFF,
            0x00, 0x2F, 0x1B, 0xFF, 0x00, 0x23, 0x13, 0xFF,
            0xF3, 0xB3, 0x7B, 0xFF, 0xB3, 0x9F, 0x67, 0xFF,
            0xA3, 0x8F, 0x5B, 0xFF, 0x93, 0x83, 0x4F, 0xFF,
            0x87, 0x77, 0x43, 0xFF, 0x77, 0x6B, 0x37, 0xFF,
            0x67, 0x5F, 0x2F, 0xFF, 0x5B, 0x53, 0x27, 0xFF,
            0x7F, 0x8B, 0x2B, 0xFF, 0x6F, 0x7B, 0x1F, 0xFF,
            0x63, 0x6F, 0x17, 0xFF, 0x53, 0x5F, 0x0F, 0xFF,
            0x43, 0x4F, 0x07, 0xFF, 0x37, 0x43, 0x07, 0xFF,
            0x2B, 0x33, 0x00, 0xFF, 0x1F, 0x27, 0x00, 0xFF,
            0xD7, 0xFF, 0xD7, 0xFF, 0x9F, 0xFF, 0x9F, 0xFF,
            0x6B, 0xFF, 0x6B, 0xFF, 0x33, 0xFF, 0x33, 0xFF,
            0x00, 0xFF, 0x00, 0xFF, 0x1B, 0xD3, 0x1F, 0xFF,
            0x2F, 0xA7, 0x33, 0xFF, 0x37, 0x7F, 0x3B, 0xFF,
            0xEB, 0xAB, 0x73, 0xFF, 0xA7, 0x00, 0xA7, 0xFF,
            0x93, 0x00, 0x93, 0xFF, 0x83, 0x00, 0x83, 0xFF,
            0x73, 0x07, 0x73, 0xFF, 0x63, 0x07, 0x63, 0xFF,
            0x53, 0x07, 0x53, 0xFF, 0x43, 0x07, 0x43, 0xFF,
            0xC3, 0xFF, 0xFF, 0xFF, 0xA7, 0xFF, 0xFF, 0xFF,
            0x6F, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF,
            0x07, 0xDF, 0xDF, 0xFF, 0x13, 0xC3, 0xC3, 0xFF,
            0x17, 0xA3, 0xA3, 0xFF, 0x1B, 0x87, 0x87, 0xFF,
            0x3B, 0x3B, 0x9F, 0xFF, 0x37, 0x37, 0xA3, 0xFF,
            0x37, 0x33, 0x87, 0xFF, 0x2F, 0x2F, 0x6F, 0xFF,
            0x2B, 0x2B, 0x63, 0xFF, 0x27, 0x27, 0x57, 0xFF,
            0x1F, 0x1F, 0x43, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x07, 0x07, 0x77, 0xFF, 0x00, 0x00, 0x67, 0xFF,
            0x00, 0x00, 0x57, 0xFF, 0x9B, 0x9B, 0xCF, 0xFF,
            0x83, 0x83, 0xC3, 0xFF, 0x6B, 0x6B, 0xB3, 0xFF,
            0x5B, 0x5B, 0xA3, 0xFF, 0x47, 0x47, 0x93, 0xFF,
            0x37, 0x37, 0x87, 0xFF, 0x2B, 0x2B, 0x77, 0xFF,
            0x1F, 0x1F, 0x67, 0xFF, 0x13, 0x13, 0x5B, 0xFF,
            0x0B, 0x0B, 0x4B, 0xFF, 0x07, 0x07, 0x3B, 0xFF,
            0x00, 0x00, 0x2B, 0xFF, 0x00, 0x00, 0x1F, 0xFF,
            0x77, 0x3B, 0x00, 0xFF, 0x6B, 0x3B, 0x00, 0xFF,
            0x63, 0x3B, 0x00, 0xFF, 0x27, 0x2F, 0x4B, 0xFF,
            0x4B, 0x3F, 0x5F, 0xFF, 0x37, 0x3B, 0x57, 0xFF,
            0x27, 0x2B, 0x4B, 0xFF, 0x4F, 0x4F, 0x77, 0xFF,
            0x17, 0x1B, 0x37, 0xFF, 0x2F, 0x1B, 0x33, 0xFF,
            0x7B, 0x4B, 0x0F, 0xFF, 0x9B, 0x57, 0x0F, 0xFF,
            0xDB, 0xA7, 0x00, 0xFF, 0xCF, 0x7B, 0x27, 0xFF,
            0xFB, 0xBB, 0x83, 0xFF, 0xEF, 0xBF, 0x00, 0xFF,
            0xEB, 0xCF, 0xA3, 0xFF, 0x6F, 0x6F, 0x87, 0xFF,
            0x63, 0x63, 0x7B, 0xFF, 0x57, 0x57, 0x6F, 0xFF,
            0x4F, 0x4F, 0x67, 0xFF, 0x43, 0x43, 0x5B, 0xFF,
            0x3B, 0x3B, 0x53, 0xFF, 0x27, 0x27, 0x3B, 0xFF,
            0x93, 0x4F, 0x33, 0xFF, 0x87, 0x3F, 0x27, 0xFF,
            0x7B, 0x2F, 0x1B, 0xFF, 0x6F, 0x23, 0x13, 0xFF,
            0x5F, 0x17, 0x0B, 0xFF, 0x53, 0x0B, 0x07, 0xFF,
            0x47, 0x07, 0x00, 0xFF, 0x3B, 0x00, 0x00, 0xFF,
            0xDB, 0xDB, 0xC7, 0xFF, 0xC3, 0xC3, 0xAB, 0xFF,
            0xAB, 0xAB, 0x93, 0xFF, 0x93, 0x93, 0x7B, 0xFF,
            0x7F, 0x7F, 0x67, 0xFF, 0x67, 0x67, 0x4F, 0xFF,
            0x4F, 0x4F, 0x3B, 0xFF, 0x3B, 0x3B, 0x2B, 0xFF,
            0xD7, 0x9F, 0x5B, 0xFF, 0xCF, 0x8F, 0x4B, 0xFF,
            0xBF, 0x73, 0x3B, 0xFF, 0xB3, 0x5B, 0x27, 0xFF,
            0x9B, 0x57, 0x0F, 0xFF, 0x8F, 0x53, 0x1B, 0xFF,
            0x7B, 0x47, 0x0F, 0xFF, 0x6F, 0x3F, 0x00, 0xFF,
            0xA7, 0x77, 0x5B, 0xFF, 0x9B, 0x6F, 0x4F, 0xFF,
            0x93, 0x63, 0x43, 0xFF, 0x87, 0x5B, 0x3B, 0xFF,
            0x7F, 0x4F, 0x33, 0xFF, 0x73, 0x47, 0x27, 0xFF,
            0x6B, 0x3F, 0x23, 0xFF, 0x5F, 0x37, 0x1B, 0xFF,
            0x57, 0x2F, 0x13, 0xFF, 0x4B, 0x27, 0x0F, 0xFF,
            0x43, 0x23, 0x0B, 0xFF, 0x3B, 0x1B, 0x07, 0xFF,
            0x2F, 0x13, 0x00, 0xFF, 0x27, 0x0F, 0x00, 0xFF,
            0x1B, 0x0B, 0x00, 0xFF, 0x13, 0x07, 0x00, 0xFF,
            0xFF, 0xFF, 0xEB, 0xFF, 0xFF, 0xFB, 0xC7, 0xFF,
            0xFF, 0xF3, 0xA7, 0xFF, 0xFF, 0xEB, 0x83, 0xFF,
            0xFF, 0xDB, 0x63, 0xFF, 0xFF, 0xCB, 0x3F, 0xFF,
            0xFF, 0xB7, 0x1F, 0xFF, 0xFF, 0x9F, 0x00, 0xFF,
            0xE3, 0x7B, 0x00, 0xFF, 0xC7, 0x5B, 0x00, 0xFF,
            0xAF, 0x43, 0x00, 0xFF, 0x93, 0x2B, 0x00, 0xFF,
            0x7B, 0x1B, 0x00, 0xFF, 0x5F, 0x0B, 0x00, 0xFF,
            0x43, 0x07, 0x00, 0xFF, 0x2B, 0x00, 0x00, 0xFF,
            0xDF, 0xDF, 0xEB, 0xFF, 0xCB, 0xCB, 0xDB, 0xFF,
            0xB7, 0xB7, 0xCB, 0xFF, 0xA7, 0xA7, 0xBB, 0xFF,
            0x97, 0x97, 0xAB, 0xFF, 0x87, 0x87, 0x9F, 0xFF,
            0x77, 0x77, 0x8F, 0xFF, 0x67, 0x67, 0x7F, 0xFF,
            0x57, 0x57, 0x6F, 0xFF, 0x4B, 0x4B, 0x63, 0xFF,
            0x3F, 0x3F, 0x53, 0xFF, 0x2F, 0x2F, 0x43, 0xFF,
            0x23, 0x23, 0x33, 0xFF, 0x17, 0x17, 0x23, 0xFF,
            0x0F, 0x0F, 0x1B, 0xFF, 0x37, 0x47, 0x8F, 0xFF
            };

        static byte[] SPRING_PALETTE = new byte[] {
            0x00, 0x00, 0x00, 0xFF, 0xE3, 0x53, 0x00, 0xFF,
            0xCF, 0x4B, 0x07, 0xFF, 0xBF, 0x43, 0x0F, 0xFF,
            0xAB, 0x3F, 0x17, 0xFF, 0x9B, 0x3B, 0x1B, 0xFF,
            0x87, 0x33, 0x1B, 0xFF, 0x6F, 0x2B, 0x1B, 0xFF,
            0x17, 0x93, 0x0F, 0xFF, 0x13, 0x83, 0x0F, 0xFF,
            0x13, 0x77, 0x0F, 0xFF, 0x0F, 0x6B, 0x13, 0xFF,
            0x0F, 0x5B, 0x13, 0xFF, 0x0F, 0x4F, 0x13, 0xFF,
            0x0F, 0x43, 0x13, 0xFF, 0xE7, 0xE3, 0xEF, 0xFF,
            0xAF, 0xAF, 0xAF, 0xFF, 0xA3, 0xA3, 0xA3, 0xFF,
            0x97, 0x97, 0x97, 0xFF, 0x8B, 0x8B, 0x8B, 0xFF,
            0x7F, 0x7F, 0x7F, 0xFF, 0x77, 0x77, 0x77, 0xFF,
            0x6B, 0x6B, 0x6B, 0xFF, 0x5F, 0x5F, 0x5F, 0xFF,
            0x53, 0x53, 0x53, 0xFF, 0x47, 0x47, 0x47, 0xFF,
            0x3F, 0x3F, 0x3F, 0xFF, 0x33, 0x33, 0x33, 0xFF,
            0x27, 0x27, 0x27, 0xFF, 0x1B, 0x1B, 0x1B, 0xFF,
            0x0F, 0x0F, 0x0F, 0xFF, 0x07, 0x07, 0x07, 0xFF,
            0xFF, 0xEF, 0xEF, 0xFF, 0xF7, 0xC3, 0xC3, 0xFF,
            0xEF, 0x9B, 0x9B, 0xFF, 0xE7, 0x77, 0x77, 0xFF,
            0x0F, 0xA7, 0x83, 0xFF, 0x0B, 0x9B, 0x77, 0xFF,
            0x0B, 0x93, 0x6B, 0xFF, 0x07, 0x87, 0x63, 0xFF,
            0x07, 0x7F, 0x53, 0xFF, 0x0F, 0x73, 0x4B, 0xFF,
            0x17, 0x5F, 0x37, 0xFF, 0x73, 0x00, 0x00, 0xFF,
            0x63, 0x00, 0x00, 0xFF, 0x4F, 0x00, 0x00, 0xFF,
            0x3B, 0x00, 0x00, 0xFF, 0x2B, 0x00, 0x00, 0xFF,
            0xFF, 0xFF, 0xFB, 0xFF, 0xD3, 0x1B, 0x1B, 0xFF,
            0xBF, 0x1B, 0x1B, 0xFF, 0xAB, 0x1B, 0x1B, 0xFF,
            0x97, 0x17, 0x17, 0xFF, 0x83, 0x17, 0x17, 0xFF,
            0x6F, 0x13, 0x13, 0xFF, 0x5F, 0x13, 0x13, 0xFF,
            0xE7, 0xEB, 0xEF, 0xFF, 0xDB, 0xE3, 0xE7, 0xFF,
            0xCF, 0xDB, 0xE3, 0xFF, 0xC7, 0xD3, 0xDB, 0xFF,
            0xBB, 0xC7, 0xD7, 0xFF, 0xAF, 0xBF, 0xCF, 0xFF,
            0xA7, 0xBB, 0xCB, 0xFF, 0x9F, 0xB3, 0xC7, 0xFF,
            0xDB, 0xEF, 0xCF, 0xFF, 0xC7, 0xDF, 0xB7, 0xFF,
            0xB3, 0xD3, 0xA7, 0xFF, 0xA3, 0xC7, 0x93, 0xFF,
            0x8F, 0xBB, 0x83, 0xFF, 0x7F, 0xAF, 0x73, 0xFF,
            0x6F, 0xA3, 0x63, 0xFF, 0x5F, 0x97, 0x53, 0xFF,
            0x4F, 0x8B, 0x47, 0xFF, 0x43, 0x7B, 0x3B, 0xFF,
            0x33, 0x6F, 0x2F, 0xFF, 0x27, 0x63, 0x27, 0xFF,
            0x1F, 0x57, 0x1F, 0xFF, 0x17, 0x4B, 0x17, 0xFF,
            0x0F, 0x3F, 0x13, 0xFF, 0x0B, 0x33, 0x0F, 0xFF,
            0x9F, 0x9F, 0xEF, 0xFF, 0x93, 0x93, 0xF7, 0xFF,
            0x7F, 0x7F, 0xE7, 0xFF, 0x73, 0x73, 0xE3, 0xFF,
            0x6B, 0x6B, 0xDB, 0xFF, 0x6F, 0x6B, 0xC7, 0xFF,
            0x53, 0x53, 0xB7, 0xFF, 0x3F, 0x3F, 0xA3, 0xFF,
            0x27, 0x27, 0x87, 0xFF, 0x1F, 0x1B, 0x63, 0xFF,
            0x1B, 0x6B, 0x53, 0xFF, 0x13, 0x5B, 0x43, 0xFF,
            0x0B, 0x4F, 0x37, 0xFF, 0x07, 0x3F, 0x27, 0xFF,
            0x00, 0x2F, 0x1B, 0xFF, 0x00, 0x23, 0x13, 0xFF,
            0xF3, 0xB3, 0x7B, 0xFF, 0xA3, 0x8F, 0x5B, 0xFF,
            0x97, 0x83, 0x4F, 0xFF, 0x8B, 0x7B, 0x47, 0xFF,
            0x7F, 0x6F, 0x3F, 0xFF, 0x73, 0x67, 0x37, 0xFF,
            0x67, 0x5B, 0x2F, 0xFF, 0x5B, 0x53, 0x27, 0xFF,
            0x7F, 0x8B, 0x2B, 0xFF, 0x6F, 0x7B, 0x1F, 0xFF,
            0x63, 0x6F, 0x17, 0xFF, 0x53, 0x5F, 0x0F, 0xFF,
            0x43, 0x4F, 0x07, 0xFF, 0x37, 0x43, 0x07, 0xFF,
            0x2B, 0x33, 0x00, 0xFF, 0x1F, 0x27, 0x00, 0xFF,
            0xD7, 0xFF, 0xD7, 0xFF, 0x9F, 0xFF, 0x9F, 0xFF,
            0x6B, 0xFF, 0x6B, 0xFF, 0x33, 0xFF, 0x33, 0xFF,
            0x00, 0xFF, 0x00, 0xFF, 0x1B, 0xD3, 0x1F, 0xFF,
            0x2F, 0xA7, 0x33, 0xFF, 0x37, 0x7F, 0x3B, 0xFF,
            0xEB, 0xAB, 0x73, 0xFF, 0xA7, 0x00, 0xA7, 0xFF,
            0x93, 0x00, 0x93, 0xFF, 0x83, 0x00, 0x83, 0xFF,
            0x73, 0x07, 0x73, 0xFF, 0x63, 0x07, 0x63, 0xFF,
            0x53, 0x07, 0x53, 0xFF, 0x43, 0x07, 0x43, 0xFF,
            0xC3, 0xFF, 0xFF, 0xFF, 0xA7, 0xFF, 0xFF, 0xFF,
            0x6F, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF,
            0x07, 0xDF, 0xDF, 0xFF, 0x13, 0xC3, 0xC3, 0xFF,
            0x17, 0xA3, 0xA3, 0xFF, 0x1B, 0x87, 0x87, 0xFF,
            0x3B, 0x3B, 0x9F, 0xFF, 0x37, 0x37, 0xA3, 0xFF,
            0x37, 0x33, 0x87, 0xFF, 0x2F, 0x2F, 0x6F, 0xFF,
            0x2B, 0x2B, 0x63, 0xFF, 0x27, 0x27, 0x57, 0xFF,
            0x1F, 0x1F, 0x43, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x07, 0x07, 0x77, 0xFF, 0x00, 0x00, 0x67, 0xFF,
            0x00, 0x00, 0x57, 0xFF, 0x9B, 0x9B, 0xCF, 0xFF,
            0x83, 0x83, 0xC3, 0xFF, 0x6B, 0x6B, 0xB3, 0xFF,
            0x5B, 0x5B, 0xA3, 0xFF, 0x47, 0x47, 0x93, 0xFF,
            0x37, 0x37, 0x87, 0xFF, 0x2B, 0x2B, 0x77, 0xFF,
            0x1F, 0x1F, 0x67, 0xFF, 0x13, 0x13, 0x5B, 0xFF,
            0x0B, 0x0B, 0x4B, 0xFF, 0x07, 0x07, 0x3B, 0xFF,
            0x00, 0x00, 0x2B, 0xFF, 0x00, 0x00, 0x1F, 0xFF,
            0x77, 0x3B, 0x00, 0xFF, 0x6B, 0x3B, 0x00, 0xFF,
            0x63, 0x3B, 0x00, 0xFF, 0x27, 0x2F, 0x4B, 0xFF,
            0x4B, 0x3F, 0x5F, 0xFF, 0x37, 0x3B, 0x57, 0xFF,
            0x27, 0x2B, 0x4B, 0xFF, 0x4F, 0x4F, 0x77, 0xFF,
            0x17, 0x1B, 0x37, 0xFF, 0x2F, 0x1B, 0x33, 0xFF,
            0x7B, 0x4B, 0x0F, 0xFF, 0x9B, 0x57, 0x0F, 0xFF,
            0xDB, 0xA7, 0x00, 0xFF, 0xCF, 0x7B, 0x27, 0xFF,
            0xFB, 0xBB, 0x83, 0xFF, 0xEF, 0xBF, 0x00, 0xFF,
            0xEB, 0xCF, 0xA3, 0xFF, 0x6F, 0x6F, 0x87, 0xFF,
            0x63, 0x63, 0x7B, 0xFF, 0x57, 0x57, 0x6F, 0xFF,
            0x4F, 0x4F, 0x67, 0xFF, 0x43, 0x43, 0x5B, 0xFF,
            0x3B, 0x3B, 0x53, 0xFF, 0x27, 0x27, 0x3B, 0xFF,
            0x93, 0x4F, 0x33, 0xFF, 0x87, 0x3F, 0x27, 0xFF,
            0x7B, 0x2F, 0x1B, 0xFF, 0x6F, 0x23, 0x13, 0xFF,
            0x5F, 0x17, 0x0B, 0xFF, 0x53, 0x0B, 0x07, 0xFF,
            0x47, 0x07, 0x00, 0xFF, 0x3B, 0x00, 0x00, 0xFF,
            0xDB, 0xDB, 0xC7, 0xFF, 0xC3, 0xC3, 0xAB, 0xFF,
            0xAB, 0xAB, 0x93, 0xFF, 0x93, 0x93, 0x7B, 0xFF,
            0x7F, 0x7F, 0x67, 0xFF, 0x67, 0x67, 0x4F, 0xFF,
            0x4F, 0x4F, 0x3B, 0xFF, 0x3B, 0x3B, 0x2B, 0xFF,
            0xD7, 0x9F, 0x5B, 0xFF, 0xCF, 0x8F, 0x4B, 0xFF,
            0xBF, 0x73, 0x3B, 0xFF, 0xB3, 0x5B, 0x27, 0xFF,
            0x9B, 0x57, 0x0F, 0xFF, 0x8F, 0x53, 0x1B, 0xFF,
            0x7B, 0x47, 0x0F, 0xFF, 0x6F, 0x3F, 0x00, 0xFF,
            0xA7, 0x77, 0x5B, 0xFF, 0x9B, 0x6F, 0x4F, 0xFF,
            0x93, 0x63, 0x43, 0xFF, 0x87, 0x5B, 0x3B, 0xFF,
            0x7F, 0x4F, 0x33, 0xFF, 0x73, 0x47, 0x27, 0xFF,
            0x6B, 0x3F, 0x23, 0xFF, 0x5F, 0x37, 0x1B, 0xFF,
            0x57, 0x2F, 0x13, 0xFF, 0x4B, 0x27, 0x0F, 0xFF,
            0x43, 0x23, 0x0B, 0xFF, 0x3B, 0x1B, 0x07, 0xFF,
            0x2F, 0x13, 0x00, 0xFF, 0x27, 0x0F, 0x00, 0xFF,
            0x1B, 0x0B, 0x00, 0xFF, 0x13, 0x07, 0x00, 0xFF,
            0xFF, 0xFF, 0xEB, 0xFF, 0xFF, 0xFB, 0xC7, 0xFF,
            0xFF, 0xF3, 0xA7, 0xFF, 0xFF, 0xEB, 0x83, 0xFF,
            0xFF, 0xDB, 0x63, 0xFF, 0xFF, 0xCB, 0x3F, 0xFF,
            0xFF, 0xB7, 0x1F, 0xFF, 0xFF, 0x9F, 0x00, 0xFF,
            0xE3, 0x7B, 0x00, 0xFF, 0xC7, 0x5B, 0x00, 0xFF,
            0xAF, 0x43, 0x00, 0xFF, 0x93, 0x2B, 0x00, 0xFF,
            0x7B, 0x1B, 0x00, 0xFF, 0x5F, 0x0B, 0x00, 0xFF,
            0x43, 0x07, 0x00, 0xFF, 0x2B, 0x00, 0x00, 0xFF,
            0xDF, 0xDF, 0xEB, 0xFF, 0xCB, 0xCB, 0xDB, 0xFF,
            0xB7, 0xB7, 0xCB, 0xFF, 0xA7, 0xA7, 0xBB, 0xFF,
            0x97, 0x97, 0xAB, 0xFF, 0x87, 0x87, 0x9F, 0xFF,
            0x77, 0x77, 0x8F, 0xFF, 0x67, 0x67, 0x7F, 0xFF,
            0x57, 0x57, 0x6F, 0xFF, 0x4B, 0x4B, 0x63, 0xFF,
            0x3F, 0x3F, 0x53, 0xFF, 0x2F, 0x2F, 0x43, 0xFF,
            0x23, 0x23, 0x33, 0xFF, 0x17, 0x17, 0x23, 0xFF,
            0x0F, 0x0F, 0x1B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
            };

        static byte[] MISSIONPALETTE = new byte[] {
            0x03, 0x07, 0x13, 0xFF, 0xEC, 0xE5, 0xDE, 0xFF,
            0xEB, 0xE0, 0xD3, 0xFF, 0xEF, 0xDA, 0xCE, 0xFF,
            0xE9, 0xDC, 0xC7, 0xFF, 0xE9, 0xDD, 0xBD, 0xFF,
            0xEB, 0xD2, 0xC9, 0xFF, 0xDF, 0xCD, 0xC6, 0xFF,
            0xEF, 0xD2, 0xBD, 0xFF, 0xE8, 0xD7, 0xB5, 0xFF,
            0xEF, 0xCA, 0xBD, 0xFF, 0xEB, 0xCE, 0xB1, 0xFF,
            0xE7, 0xC7, 0xBA, 0xFF, 0xEF, 0xC2, 0xB5, 0xFF,
            0xE1, 0xC4, 0xB9, 0xFF, 0xCF, 0xBC, 0xB7, 0xFF,
            0xEF, 0xCA, 0xAD, 0xFF, 0xEB, 0xCE, 0xA4, 0xFF,
            0xEB, 0xC6, 0xAD, 0xFF, 0xE7, 0xCA, 0xA4, 0xFF,
            0xE7, 0xC2, 0xAD, 0xFF, 0xEC, 0xBC, 0xAA, 0xFF,
            0xEF, 0xB9, 0xA4, 0xFF, 0xEF, 0xC2, 0x9C, 0xFF,
            0xE7, 0xCE, 0x9C, 0xFF, 0xE7, 0xC2, 0xA0, 0xFF,
            0xDF, 0xC2, 0xAD, 0xFF, 0xE4, 0xB6, 0xA7, 0xFF,
            0xDB, 0xB7, 0xA8, 0xFF, 0xD7, 0xB1, 0xA8, 0xFF,
            0xCE, 0xB5, 0xAD, 0xFF, 0xBF, 0xAB, 0xA7, 0xFF,
            0xE7, 0xCA, 0x94, 0xFF, 0xE7, 0xC2, 0x94, 0xFF,
            0xE7, 0xC2, 0x8C, 0xFF, 0xEF, 0xB9, 0x9C, 0xFF,
            0xEF, 0xB9, 0x94, 0xFF, 0xE7, 0xB9, 0x9C, 0xFF,
            0xE7, 0xB9, 0x94, 0xFF, 0xE7, 0xB9, 0x8C, 0xFF,
            0xEF, 0xB1, 0x9C, 0xFF, 0xE7, 0xB1, 0x9C, 0xFF,
            0xEB, 0xAD, 0x98, 0xFF, 0xE7, 0xB1, 0x94, 0xFF,
            0xEF, 0xA9, 0x94, 0xFF, 0xE7, 0xA9, 0x94, 0xFF,
            0xEF, 0xAD, 0x8C, 0xFF, 0xEF, 0xA1, 0x8C, 0xFF,
            0xDF, 0xB1, 0x9C, 0xFF, 0xDB, 0xAD, 0x9C, 0xFF,
            0xDF, 0xB1, 0x94, 0xFF, 0xDF, 0xA9, 0x94, 0xFF,
            0xE7, 0xB1, 0x8C, 0xFF, 0xE7, 0xA9, 0x8C, 0xFF,
            0xDF, 0xA9, 0x8C, 0xFF, 0xE3, 0xA1, 0x8C, 0xFF,
            0xD2, 0xAD, 0x9C, 0xFF, 0xD2, 0xA9, 0x98, 0xFF,
            0xD7, 0xA5, 0x90, 0xFF, 0xD7, 0xA1, 0x8C, 0xFF,
            0xCA, 0xA9, 0x98, 0xFF, 0xCE, 0xA1, 0x90, 0xFF,
            0xC4, 0xA5, 0x98, 0xFF, 0xB1, 0x9D, 0x98, 0xFF,
            0xE7, 0xB9, 0x83, 0xFF, 0xEB, 0xAD, 0x83, 0xFF,
            0xE7, 0xA9, 0x83, 0xFF, 0xE7, 0xB1, 0x7B, 0xFF,
            0xEB, 0xAD, 0x77, 0xFF, 0xE7, 0xA9, 0x7B, 0xFF,
            0xE7, 0xA9, 0x73, 0xFF, 0xEF, 0xA1, 0x83, 0xFF,
            0xE7, 0xA1, 0x83, 0xFF, 0xDF, 0xA1, 0x83, 0xFF,
            0xEF, 0xA1, 0x7B, 0xFF, 0xE7, 0xA1, 0x7B, 0xFF,
            0xEF, 0x9C, 0x77, 0xFF, 0xE7, 0x9E, 0x75, 0xFF,
            0xE7, 0xA1, 0x6B, 0xFF, 0xEF, 0x98, 0x6B, 0xFF,
            0xE4, 0x98, 0x80, 0xFF, 0xDF, 0x98, 0x7B, 0xFF,
            0xDF, 0x90, 0x7B, 0xFF, 0xE3, 0x98, 0x73, 0xFF,
            0xE9, 0x92, 0x70, 0xFF, 0xEF, 0x90, 0x6B, 0xFF,
            0xE7, 0x90, 0x6B, 0xFF, 0xDF, 0x90, 0x73, 0xFF,
            0xEB, 0x8C, 0x64, 0xFF, 0xE7, 0x88, 0x62, 0xFF,
            0xDF, 0x8D, 0x68, 0xFF, 0xDF, 0x88, 0x62, 0xFF,
            0xEF, 0x88, 0x5A, 0xFF, 0xE7, 0x88, 0x5A, 0xFF,
            0xE7, 0x80, 0x5A, 0xFF, 0xE7, 0x80, 0x52, 0xFF,
            0xCE, 0x98, 0x8C, 0xFF, 0xD7, 0xA1, 0x83, 0xFF,
            0xCE, 0xA1, 0x83, 0xFF, 0xD7, 0x98, 0x83, 0xFF,
            0xCE, 0x94, 0x83, 0xFF, 0xD7, 0x98, 0x7B, 0xFF,
            0xCE, 0x98, 0x7B, 0xFF, 0xD7, 0x90, 0x7B, 0xFF,
            0xD2, 0x94, 0x77, 0xFF, 0xD7, 0x90, 0x73, 0xFF,
            0xD7, 0x88, 0x73, 0xFF, 0xD7, 0x90, 0x6B, 0xFF,
            0xD7, 0x88, 0x6B, 0xFF, 0xDB, 0x84, 0x62, 0xFF,
            0xD9, 0x85, 0x5C, 0xFF, 0xDB, 0x7D, 0x54, 0xFF,
            0xC6, 0xA1, 0x8C, 0xFF, 0xC6, 0x98, 0x8C, 0xFF,
            0xC6, 0x94, 0x83, 0xFF, 0xC6, 0x94, 0x7B, 0xFF,
            0xCE, 0x90, 0x73, 0xFF, 0xCA, 0x8C, 0x71, 0xFF,
            0xCE, 0x84, 0x66, 0xFF, 0xCE, 0x7A, 0x57, 0xFF,
            0xBA, 0x96, 0x87, 0xFF, 0xBC, 0x8E, 0x79, 0xFF,
            0xC0, 0x84, 0x6D, 0xFF, 0xC0, 0x7B, 0x60, 0xFF,
            0xB4, 0x82, 0x6F, 0xFF, 0xB6, 0x72, 0x56, 0xFF,
            0xA2, 0x77, 0x67, 0xFF, 0x96, 0x61, 0x4E, 0xFF,
            0x63, 0xDB, 0xFF, 0xFF, 0x47, 0xC3, 0xF7, 0xFF,
            0x2F, 0xAF, 0xF3, 0xFF, 0x13, 0x93, 0xEB, 0xFF,
            0x00, 0x7B, 0xE7, 0xFF, 0x00, 0x5B, 0xC7, 0xFF,
            0x00, 0x43, 0xAB, 0xFF, 0x53, 0x77, 0x9C, 0xFF,
            0x3A, 0x67, 0x8C, 0xFF, 0x3A, 0x5F, 0x7B, 0xFF,
            0x3A, 0x5F, 0x6F, 0xFF, 0x42, 0x56, 0x6B, 0xFF,
            0x3A, 0x5F, 0x62, 0xFF, 0x42, 0x56, 0x62, 0xFF,
            0x29, 0x56, 0x6B, 0xFF, 0x29, 0x4A, 0x66, 0xFF,
            0x3E, 0x52, 0x5A, 0xFF, 0x29, 0x56, 0x5A, 0xFF,
            0x29, 0x4B, 0x5C, 0xFF, 0x29, 0x3E, 0x62, 0xFF,
            0x3A, 0x3E, 0x5A, 0xFF, 0x3A, 0x46, 0x4A, 0xFF,
            0x3A, 0x3E, 0x4A, 0xFF, 0x3A, 0x3E, 0x41, 0xFF,
            0x19, 0x4E, 0x5A, 0xFF, 0x29, 0x3E, 0x5A, 0xFF,
            0x21, 0x46, 0x56, 0xFF, 0x26, 0x41, 0x49, 0xFF,
            0x19, 0x44, 0x4E, 0xFF, 0x08, 0x3E, 0x4A, 0xFF,
            0x19, 0x3E, 0x41, 0xFF, 0x08, 0x3E, 0x41, 0xFF,
            0x00, 0x25, 0x9C, 0xFF, 0x21, 0x35, 0x94, 0xFF,
            0x19, 0x2D, 0x6B, 0xFF, 0x11, 0x1D, 0x62, 0xFF,
            0x00, 0x04, 0x62, 0xFF, 0x29, 0x35, 0x5A, 0xFF,
            0x21, 0x35, 0x5A, 0xFF, 0x08, 0x35, 0x52, 0xFF,
            0x29, 0x2D, 0x52, 0xFF, 0x19, 0x2D, 0x52, 0xFF,
            0x11, 0x2D, 0x52, 0xFF, 0x08, 0x2D, 0x52, 0xFF,
            0x19, 0x25, 0x52, 0xFF, 0x11, 0x25, 0x52, 0xFF,
            0x08, 0x14, 0x52, 0xFF, 0x29, 0x35, 0x4A, 0xFF,
            0x2D, 0x35, 0x41, 0xFF, 0x21, 0x35, 0x4A, 0xFF,
            0x29, 0x2D, 0x41, 0xFF, 0x2D, 0x25, 0x41, 0xFF,
            0x21, 0x35, 0x41, 0xFF, 0x21, 0x2D, 0x41, 0xFF,
            0x19, 0x35, 0x4A, 0xFF, 0x19, 0x2D, 0x4A, 0xFF,
            0x19, 0x35, 0x41, 0xFF, 0x11, 0x35, 0x41, 0xFF,
            0x08, 0x35, 0x41, 0xFF, 0x19, 0x2D, 0x41, 0xFF,
            0x15, 0x29, 0x41, 0xFF, 0x11, 0x25, 0x41, 0xFF,
            0x08, 0x2D, 0x4A, 0xFF, 0x08, 0x2D, 0x41, 0xFF,
            0x53, 0x35, 0x31, 0xFF, 0x3B, 0x30, 0x30, 0xFF,
            0x2E, 0x35, 0x34, 0xFF, 0x32, 0x21, 0x28, 0xFF,
            0x23, 0x35, 0x33, 0xFF, 0x25, 0x29, 0x35, 0xFF,
            0x19, 0x1D, 0x41, 0xFF, 0x24, 0x1C, 0x2D, 0xFF,
            0x19, 0x35, 0x39, 0xFF, 0x19, 0x2D, 0x39, 0xFF,
            0x19, 0x25, 0x39, 0xFF, 0x19, 0x2D, 0x2D, 0xFF,
            0x19, 0x1D, 0x39, 0xFF, 0x19, 0x21, 0x2D, 0xFF,
            0x19, 0x14, 0x31, 0xFF, 0x19, 0x0C, 0x29, 0xFF,
            0x0B, 0x2D, 0x39, 0xFF, 0x0C, 0x21, 0x41, 0xFF,
            0x11, 0x1D, 0x39, 0xFF, 0x11, 0x1D, 0x31, 0xFF,
            0x08, 0x1D, 0x41, 0xFF, 0x11, 0x14, 0x41, 0xFF,
            0x08, 0x14, 0x41, 0xFF, 0x11, 0x0C, 0x39, 0xFF,
            0x11, 0x1D, 0x29, 0xFF, 0x11, 0x14, 0x29, 0xFF,
            0x11, 0x0C, 0x29, 0xFF, 0x19, 0x1D, 0x20, 0xFF,
            0x19, 0x14, 0x18, 0xFF, 0x19, 0x0C, 0x18, 0xFF,
            0x11, 0x0C, 0x18, 0xFF, 0x11, 0x14, 0x10, 0xFF,
            0x00, 0x29, 0x3D, 0xFF, 0x00, 0x1D, 0x41, 0xFF,
            0x08, 0x29, 0x35, 0xFF, 0x00, 0x22, 0x39, 0xFF,
            0x08, 0x25, 0x31, 0xFF, 0x00, 0x25, 0x31, 0xFF,
            0x08, 0x1D, 0x31, 0xFF, 0x08, 0x1D, 0x29, 0xFF,
            0x00, 0x1D, 0x31, 0xFF, 0x00, 0x1D, 0x29, 0xFF,
            0x08, 0x14, 0x31, 0xFF, 0x08, 0x14, 0x29, 0xFF,
            0x00, 0x14, 0x41, 0xFF, 0x00, 0x14, 0x31, 0xFF,
            0x00, 0x14, 0x29, 0xFF, 0x00, 0x0C, 0x39, 0xFF,
            0x00, 0x14, 0x29, 0xFF, 0x08, 0x0C, 0x29, 0xFF,
            0x00, 0x04, 0x29, 0xFF, 0x00, 0x04, 0x29, 0xFF,
            0x08, 0x25, 0x20, 0xFF, 0x00, 0x1D, 0x20, 0xFF,
            0x08, 0x14, 0x20, 0xFF, 0x00, 0x14, 0x20, 0xFF,
            0x08, 0x0C, 0x20, 0xFF, 0x00, 0x0C, 0x20, 0xFF,
            0x00, 0x0C, 0x20, 0xFF, 0x08, 0x14, 0x18, 0xFF,
            0x00, 0x14, 0x18, 0xFF, 0x00, 0x0C, 0x18, 0xFF,
            0x00, 0x14, 0x10, 0xFF, 0xEB, 0xE7, 0xE7, 0xFF
            };

        static byte[] LOADINGPALETTE = new byte[] {
            0x0F, 0x0F, 0x12, 0xFF, 0x0E, 0x0F, 0x12, 0xFF,
            0x0F, 0x13, 0x12, 0xFF, 0x0F, 0x0F, 0x14, 0xFF,
            0x0E, 0x0F, 0x14, 0xFF, 0x0F, 0x13, 0x14, 0xFF,
            0x0E, 0x13, 0x14, 0xFF, 0x10, 0x13, 0x14, 0xFF,
            0x1C, 0x13, 0x14, 0xFF, 0x0F, 0x21, 0x14, 0xFF,
            0x0E, 0x21, 0x14, 0xFF, 0x30, 0x21, 0x14, 0xFF,
            0x0F, 0x0F, 0x20, 0xFF, 0x0E, 0x0F, 0x20, 0xFF,
            0x0F, 0x13, 0x20, 0xFF, 0x0E, 0x13, 0x20, 0xFF,
            0x0F, 0x21, 0x20, 0xFF, 0x0E, 0x21, 0x20, 0xFF,
            0x10, 0x21, 0x20, 0xFF, 0x1C, 0x21, 0x20, 0xFF,
            0x0F, 0x29, 0x20, 0xFF, 0x0E, 0x29, 0x20, 0xFF,
            0x10, 0x29, 0x20, 0xFF, 0x0F, 0x13, 0x29, 0xFF,
            0x0E, 0x13, 0x29, 0xFF, 0x0F, 0x21, 0x29, 0xFF,
            0x0E, 0x21, 0x29, 0xFF, 0x10, 0x21, 0x29, 0xFF,
            0x0F, 0x29, 0x29, 0xFF, 0x0E, 0x29, 0x29, 0xFF,
            0x10, 0x29, 0x29, 0xFF, 0x27, 0x29, 0x29, 0xFF,
            0x0E, 0x13, 0x33, 0xFF, 0x0F, 0x21, 0x33, 0xFF,
            0x0F, 0x21, 0x44, 0xFF, 0x0E, 0x21, 0x33, 0xFF,
            0x0E, 0x21, 0x44, 0xFF, 0x10, 0x21, 0x33, 0xFF,
            0x0F, 0x29, 0x33, 0xFF, 0x0E, 0x29, 0x33, 0xFF,
            0x0E, 0x29, 0x44, 0xFF, 0x0E, 0x29, 0x4C, 0xFF,
            0x10, 0x29, 0x33, 0xFF, 0x10, 0x29, 0x44, 0xFF,
            0x10, 0x29, 0x4C, 0xFF, 0x1C, 0x29, 0x33, 0xFF,
            0x1C, 0x29, 0x44, 0xFF, 0x0E, 0x33, 0x29, 0xFF,
            0x10, 0x33, 0x29, 0xFF, 0x0E, 0x33, 0x33, 0xFF,
            0x10, 0x33, 0x33, 0xFF, 0x0E, 0x43, 0x33, 0xFF,
            0x10, 0x43, 0x33, 0xFF, 0x0E, 0x33, 0x44, 0xFF,
            0x0D, 0x43, 0x44, 0xFF, 0x0E, 0x33, 0x4C, 0xFF,
            0x10, 0x33, 0x44, 0xFF, 0x10, 0x43, 0x44, 0xFF,
            0x10, 0x4B, 0x44, 0xFF, 0x1C, 0x33, 0x33, 0xFF,
            0x1C, 0x33, 0x44, 0xFF, 0x27, 0x33, 0x33, 0xFF,
            0x24, 0x38, 0x3C, 0xFF, 0x21, 0x47, 0x44, 0xFF,
            0x10, 0x33, 0x4C, 0xFF, 0x1C, 0x33, 0x4C, 0xFF,
            0x27, 0x33, 0x4C, 0xFF, 0x0E, 0x43, 0x4C, 0xFF,
            0x10, 0x43, 0x4C, 0xFF, 0x1C, 0x43, 0x4C, 0xFF,
            0x27, 0x43, 0x4C, 0xFF, 0x30, 0x43, 0x4C, 0xFF,
            0x10, 0x4B, 0x4C, 0xFF, 0x1C, 0x4B, 0x4C, 0xFF,
            0x27, 0x4B, 0x4C, 0xFF, 0x0E, 0x33, 0x54, 0xFF,
            0x10, 0x33, 0x54, 0xFF, 0x1C, 0x33, 0x54, 0xFF,
            0x10, 0x43, 0x54, 0xFF, 0x1C, 0x43, 0x54, 0xFF,
            0x27, 0x43, 0x54, 0xFF, 0x30, 0x43, 0x54, 0xFF,
            0x10, 0x4B, 0x54, 0xFF, 0x1C, 0x4B, 0x54, 0xFF,
            0x27, 0x4B, 0x54, 0xFF, 0x10, 0x33, 0x65, 0xFF,
            0x10, 0x43, 0x65, 0xFF, 0x1C, 0x43, 0x65, 0xFF,
            0x27, 0x43, 0x65, 0xFF, 0x10, 0x4B, 0x65, 0xFF,
            0x1C, 0x4B, 0x65, 0xFF, 0x27, 0x4B, 0x65, 0xFF,
            0x10, 0x43, 0x6E, 0xFF, 0x1C, 0x45, 0x6E, 0xFF,
            0x1C, 0x4B, 0x6E, 0xFF, 0x1C, 0x4B, 0x76, 0xFF,
            0x30, 0x4B, 0x4C, 0xFF, 0x10, 0x53, 0x4C, 0xFF,
            0x1C, 0x53, 0x4C, 0xFF, 0x1C, 0x53, 0x58, 0xFF,
            0x1C, 0x53, 0x6E, 0xFF, 0x30, 0x4B, 0x54, 0xFF,
            0x30, 0x4B, 0x65, 0xFF, 0x30, 0x4B, 0x6E, 0xFF,
            0x27, 0x53, 0x6E, 0xFF, 0x30, 0x53, 0x54, 0xFF,
            0x30, 0x53, 0x65, 0xFF, 0x10, 0x61, 0x54, 0xFF,
            0x21, 0x61, 0x58, 0xFF, 0x30, 0x61, 0x65, 0xFF,
            0x21, 0x6D, 0x58, 0xFF, 0x29, 0x6F, 0x65, 0xFF,
            0x21, 0x4F, 0x76, 0xFF, 0x2D, 0x50, 0x73, 0xFF,
            0x1C, 0x61, 0x6E, 0xFF, 0x27, 0x61, 0x6E, 0xFF,
            0x1C, 0x61, 0x76, 0xFF, 0x2C, 0x57, 0x76, 0xFF,
            0x25, 0x54, 0x7F, 0xFF, 0x23, 0x54, 0x93, 0xFF,
            0x30, 0x61, 0x6E, 0xFF, 0x27, 0x6D, 0x6E, 0xFF,
            0x2C, 0x69, 0x76, 0xFF, 0x30, 0x61, 0x7F, 0xFF,
            0x2D, 0x72, 0x6E, 0xFF, 0x30, 0x6D, 0x76, 0xFF,
            0x28, 0x71, 0x7D, 0xFF, 0x2C, 0x86, 0x7B, 0xFF,
            0x48, 0x21, 0x20, 0xFF, 0x40, 0x53, 0x65, 0xFF,
            0x40, 0x61, 0x65, 0xFF, 0x40, 0x53, 0x6E, 0xFF,
            0x40, 0x61, 0x6E, 0xFF, 0x48, 0x61, 0x6E, 0xFF,
            0x40, 0x6D, 0x6E, 0xFF, 0x40, 0x53, 0x76, 0xFF,
            0x44, 0x61, 0x76, 0xFF, 0x40, 0x6D, 0x76, 0xFF,
            0x40, 0x61, 0x7F, 0xFF, 0x48, 0x61, 0x7F, 0xFF,
            0x30, 0x53, 0x90, 0xFF, 0x38, 0x6D, 0x7F, 0xFF,
            0x34, 0x63, 0x90, 0xFF, 0x30, 0x62, 0x9B, 0xFF,
            0x44, 0x71, 0x6E, 0xFF, 0x42, 0x71, 0x7B, 0xFF,
            0x40, 0x75, 0x7F, 0xFF, 0x40, 0x6D, 0x90, 0xFF,
            0x30, 0x75, 0x90, 0xFF, 0x30, 0x75, 0x98, 0xFF,
            0x48, 0x6D, 0x90, 0xFF, 0x42, 0x6F, 0x95, 0xFF,
            0x48, 0x75, 0x76, 0xFF, 0x42, 0x77, 0x82, 0xFF,
            0x44, 0x75, 0x98, 0xFF, 0x45, 0x75, 0xA3, 0xFF,
            0x41, 0x8A, 0x8E, 0xFF, 0x42, 0x88, 0x9F, 0xFF,
            0x42, 0x88, 0xA5, 0xFF, 0x44, 0xA0, 0xA2, 0xFF,
            0x62, 0x2D, 0x20, 0xFF, 0x51, 0x6D, 0x77, 0xFF,
            0x51, 0x71, 0x83, 0xFF, 0x56, 0x79, 0x83, 0xFF,
            0x56, 0x75, 0x94, 0xFF, 0x56, 0x76, 0x99, 0xFF,
            0x64, 0x7F, 0x94, 0xFF, 0x58, 0x8D, 0x96, 0xFF,
            0x4E, 0x7D, 0xA5, 0xFF, 0x4A, 0x86, 0xB5, 0xFF,
            0x64, 0x7D, 0xA3, 0xFF, 0x51, 0x8B, 0xB5, 0xFF,
            0x62, 0x8B, 0xA1, 0xFF, 0x56, 0x92, 0xB3, 0xFF,
            0x64, 0x96, 0xAF, 0xFF, 0x56, 0xAD, 0xB6, 0xFF,
            0x8C, 0x38, 0x29, 0xFF, 0x73, 0x8B, 0x98, 0xFF,
            0x75, 0x93, 0xA7, 0xFF, 0x78, 0x9F, 0xB3, 0xFF,
            0x75, 0x9F, 0xBF, 0xFF, 0x76, 0xA3, 0xCE, 0xFF,
            0x7C, 0xB0, 0xC6, 0xFF, 0x7D, 0xBF, 0xC9, 0xFF,
            0xB6, 0x4D, 0x36, 0xFF, 0xD9, 0x61, 0x44, 0xFF,
            0xEB, 0x61, 0x4C, 0xFF, 0xF0, 0x6D, 0x4C, 0xFF,
            0x96, 0xB1, 0xCB, 0xFF, 0x9B, 0xBD, 0xCE, 0xFF,
            0xF8, 0x79, 0x54, 0xFF, 0xAB, 0xC0, 0xCE, 0xFF,
            0x80, 0xB9, 0xE7, 0xFF, 0x9B, 0xBE, 0xE4, 0xFF,
            0x98, 0xD1, 0xDF, 0xFF, 0xAB, 0xCB, 0xE5, 0xFF,
            0x98, 0xC5, 0xF5, 0xFF, 0xA1, 0xDB, 0xEF, 0xFF,
            0x9D, 0xCB, 0xF5, 0xFF, 0x9E, 0xD9, 0xF6, 0xFF,
            0xB9, 0xC7, 0xDB, 0xFF, 0xBC, 0xD0, 0xE7, 0xFF,
            0xB7, 0xD6, 0xF5, 0xFF, 0xC4, 0xD6, 0xEF, 0xFF,
            0xAB, 0xD6, 0xF5, 0xFF, 0xBB, 0xD6, 0xF5, 0xFF,
            0xB3, 0xD6, 0xF7, 0xFF, 0xB3, 0xDB, 0xF4, 0xFF,
            0xB3, 0xE7, 0xF5, 0xFF, 0xBC, 0xE5, 0xF2, 0xFF,
            0xB7, 0xED, 0xF6, 0xFF, 0xB7, 0xE2, 0xF6, 0xFF,
            0xCB, 0xE2, 0xEF, 0xFF, 0xCB, 0xED, 0xEF, 0xFF,
            0xBF, 0xE2, 0xF6, 0xFF, 0xC1, 0xEA, 0xF6, 0xFF,
            0xB7, 0xED, 0xF6, 0xFF, 0xA5, 0xE9, 0xF6, 0xFF,
            0xBF, 0xED, 0xF6, 0xFF, 0xB9, 0xE5, 0xF4, 0xFF,
            0xB7, 0xF3, 0xF6, 0xFF, 0xBF, 0xF3, 0xF6, 0xFF,
            0xBF, 0xED, 0xF4, 0xFF, 0xBB, 0xF0, 0xF5, 0xFF,
            0xD4, 0xE9, 0xF7, 0xFF, 0xCB, 0xED, 0xF6, 0xFF,
            0xD9, 0xED, 0xF6, 0xFF, 0xCB, 0xF3, 0xF6, 0xFF,
            0xE1, 0xEF, 0xF6, 0xFF, 0xD9, 0xF3, 0xF6, 0xFF,
            0xE1, 0xF3, 0xF6, 0xFF, 0xEB, 0xF3, 0xF6, 0xFF,
            0xCB, 0xE2, 0xF4, 0xFF, 0xCB, 0xED, 0xF4, 0xFF,
            0xD9, 0xED, 0xF4, 0xFF, 0xE1, 0xED, 0xF4, 0xFF,
            0xCB, 0xF3, 0xF6, 0xFF, 0xD9, 0xF3, 0xF4, 0xFF,
            0xE1, 0xF3, 0xF6, 0xFF, 0xEB, 0xF3, 0xF6, 0xFF,
            0xCB, 0xED, 0xF8, 0xFF, 0xCB, 0xF3, 0xF8, 0xFF,
            0xD9, 0xF3, 0xF8, 0xFF, 0xE1, 0xF3, 0xF4, 0xFF,
            0xE1, 0xF3, 0xF8, 0xFF, 0xD1, 0xF3, 0xF4, 0xFF,
            0xD4, 0xF3, 0xF5, 0xFF, 0xE1, 0xF3, 0xF4, 0xFF,
            0xE1, 0xF3, 0xF8, 0xFF, 0xEB, 0xF3, 0xF4, 0xFF,
            0xEB, 0xF3, 0xF4, 0xFF, 0xEB, 0xF3, 0xF8, 0xFF,
            0xEB, 0xF3, 0xF8, 0xFF, 0xF3, 0xF3, 0xF4, 0xFF,
            0xF3, 0xF3, 0xF4, 0xFF, 0xF3, 0xF3, 0xF8, 0xFF
            };

        static byte[] TITLEPALETTE = new byte[] {
            0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0xE3, 0x00,
            0x07, 0x4B, 0xCF, 0x00, 0x0F, 0x43, 0xBF, 0x00,
            0x17, 0x3F, 0xAB, 0x00, 0x1B, 0x3B, 0x9B, 0x00,
            0x1B, 0x33, 0x87, 0x00, 0x1B, 0x2B, 0x6F, 0x00,
            0x0F, 0x93, 0x17, 0x00, 0x0F, 0x83, 0x13, 0x00,
            0x0F, 0x77, 0x13, 0x00, 0x13, 0x6B, 0x0F, 0x00,
            0x13, 0x5B, 0x0F, 0x00, 0x13, 0x4F, 0x0F, 0x00,
            0x13, 0x43, 0x0F, 0x00, 0xEF, 0xE3, 0xE7, 0x00,
            0xAF, 0xAF, 0xAF, 0x00, 0xA3, 0xA3, 0xA3, 0x00,
            0x97, 0x97, 0x97, 0x00, 0x8B, 0x8B, 0x8B, 0x00,
            0x7F, 0x7F, 0x7F, 0x00, 0x77, 0x77, 0x77, 0x00,
            0x6B, 0x6B, 0x6B, 0x00, 0x5F, 0x5F, 0x5F, 0x00,
            0x53, 0x53, 0x53, 0x00, 0x47, 0x47, 0x47, 0x00,
            0x3F, 0x3F, 0x3F, 0x00, 0x33, 0x33, 0x33, 0x00,
            0x27, 0x27, 0x27, 0x00, 0x1B, 0x1B, 0x1B, 0x00,
            0x0F, 0x0F, 0x0F, 0x00, 0x07, 0x07, 0x07, 0x00,
            0xEF, 0xEF, 0xFF, 0x00, 0xC3, 0xC3, 0xF7, 0x00,
            0x9B, 0x9B, 0xEF, 0x00, 0x77, 0x77, 0xE7, 0x00,
            0x83, 0xA7, 0x0F, 0x00, 0x77, 0x9B, 0x0B, 0x00,
            0x6B, 0x93, 0x0B, 0x00, 0x63, 0x87, 0x07, 0x00,
            0x53, 0x7F, 0x07, 0x00, 0x4B, 0x73, 0x0F, 0x00,
            0x37, 0x5F, 0x17, 0x00, 0x00, 0x00, 0x73, 0x00,
            0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x4F, 0x00,
            0x00, 0x00, 0x3B, 0x00, 0x00, 0x00, 0x2B, 0x00,
            0xFB, 0xFF, 0xFF, 0x00, 0x1B, 0x1B, 0xD3, 0x00,
            0x1B, 0x1B, 0xBF, 0x00, 0x1B, 0x1B, 0xAB, 0x00,
            0x17, 0x17, 0x97, 0x00, 0x17, 0x17, 0x83, 0x00,
            0x13, 0x13, 0x6F, 0x00, 0x13, 0x13, 0x5F, 0x00,
            0xEF, 0xEB, 0xE7, 0x00, 0xE7, 0xE3, 0xDB, 0x00,
            0xE3, 0xDB, 0xCF, 0x00, 0xDB, 0xD3, 0xC7, 0x00,
            0xD7, 0xC7, 0xBB, 0x00, 0xCF, 0xBF, 0xAF, 0x00,
            0xCB, 0xBB, 0xA7, 0x00, 0xC7, 0xB3, 0x9F, 0x00,
            0x97, 0xFF, 0x9B, 0x00, 0x83, 0xEF, 0x87, 0x00,
            0x73, 0xE3, 0x77, 0x00, 0x63, 0xD7, 0x67, 0x00,
            0x57, 0xC7, 0x57, 0x00, 0x47, 0xBB, 0x4B, 0x00,
            0x3B, 0xAF, 0x3F, 0x00, 0x33, 0x9F, 0x33, 0x00,
            0x27, 0x93, 0x27, 0x00, 0x1F, 0x87, 0x1F, 0x00,
            0x17, 0x77, 0x17, 0x00, 0x0F, 0x6B, 0x0F, 0x00,
            0x07, 0x5F, 0x0B, 0x00, 0x07, 0x4F, 0x07, 0x00,
            0x00, 0x43, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00,
            0xE7, 0x7F, 0x7F, 0x00, 0xE3, 0x73, 0x73, 0x00,
            0xDB, 0x6B, 0x6B, 0x00, 0xC7, 0x6B, 0x6F, 0x00,
            0xB7, 0x53, 0x53, 0x00, 0xA3, 0x3F, 0x3F, 0x00,
            0x87, 0x27, 0x27, 0x00, 0x63, 0x1B, 0x1F, 0x00,
            0xEF, 0x9F, 0x9F, 0x00, 0xF7, 0x93, 0x93, 0x00,
            0x53, 0x6B, 0x1B, 0x00, 0x43, 0x5B, 0x13, 0x00,
            0x37, 0x4F, 0x0B, 0x00, 0x27, 0x3F, 0x07, 0x00,
            0x1B, 0x2F, 0x00, 0x00, 0x13, 0x23, 0x00, 0x00,
            0x7B, 0xB3, 0xF3, 0x00, 0x5B, 0x8F, 0xA3, 0x00,
            0x4F, 0x83, 0x97, 0x00, 0x47, 0x7B, 0x8B, 0x00,
            0x3F, 0x6F, 0x7F, 0x00, 0x37, 0x67, 0x73, 0x00,
            0x2F, 0x5B, 0x67, 0x00, 0x27, 0x53, 0x5B, 0x00,
            0x2B, 0x8B, 0x7F, 0x00, 0x1F, 0x7B, 0x6F, 0x00,
            0x17, 0x6F, 0x63, 0x00, 0x0F, 0x5F, 0x53, 0x00,
            0x07, 0x4F, 0x43, 0x00, 0x07, 0x43, 0x37, 0x00,
            0x00, 0x33, 0x2B, 0x00, 0x00, 0x27, 0x1F, 0x00,
            0xD7, 0xFF, 0xD7, 0x00, 0x9F, 0xFF, 0x9F, 0x00,
            0x6B, 0xFF, 0x6B, 0x00, 0x33, 0xFF, 0x33, 0x00,
            0x00, 0xFF, 0x00, 0x00, 0x1F, 0xD3, 0x1B, 0x00,
            0x33, 0xA7, 0x2F, 0x00, 0x3B, 0x7F, 0x37, 0x00,
            0x73, 0xAB, 0xEB, 0x00, 0xA7, 0x00, 0xA7, 0x00,
            0x93, 0x00, 0x93, 0x00, 0x83, 0x00, 0x83, 0x00,
            0x73, 0x07, 0x73, 0x00, 0x63, 0x07, 0x63, 0x00,
            0x53, 0x07, 0x53, 0x00, 0x43, 0x07, 0x43, 0x00,
            0xFF, 0xFF, 0xC3, 0x00, 0xFF, 0xFF, 0xA7, 0x00,
            0xFF, 0xFF, 0x6F, 0x00, 0xFF, 0xFF, 0x00, 0x00,
            0xDF, 0xDF, 0x07, 0x00, 0xC3, 0xC3, 0x13, 0x00,
            0xA3, 0xA3, 0x17, 0x00, 0x87, 0x87, 0x1B, 0x00,
            0x9F, 0x3B, 0x3B, 0x00, 0xA3, 0x37, 0x37, 0x00,
            0x87, 0x33, 0x37, 0x00, 0x6F, 0x2F, 0x2F, 0x00,
            0x63, 0x2B, 0x2B, 0x00, 0x57, 0x27, 0x27, 0x00,
            0x43, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x77, 0x07, 0x07, 0x00, 0x67, 0x00, 0x00, 0x00,
            0x57, 0x00, 0x00, 0x00, 0xCF, 0x9B, 0x9B, 0x00,
            0xC3, 0x83, 0x83, 0x00, 0xB3, 0x6B, 0x6B, 0x00,
            0xA3, 0x5B, 0x5B, 0x00, 0x93, 0x47, 0x47, 0x00,
            0x87, 0x37, 0x37, 0x00, 0x77, 0x2B, 0x2B, 0x00,
            0x67, 0x1F, 0x1F, 0x00, 0x5B, 0x13, 0x13, 0x00,
            0x4B, 0x0B, 0x0B, 0x00, 0x3B, 0x07, 0x07, 0x00,
            0x2B, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00,
            0x00, 0x3B, 0x77, 0x00, 0x00, 0x3B, 0x6B, 0x00,
            0x00, 0x3B, 0x63, 0x00, 0x4B, 0x2F, 0x27, 0x00,
            0x5F, 0x3F, 0x4B, 0x00, 0x57, 0x3B, 0x37, 0x00,
            0x4B, 0x2B, 0x27, 0x00, 0x77, 0x4F, 0x4F, 0x00,
            0x37, 0x1B, 0x17, 0x00, 0x33, 0x1B, 0x2F, 0x00,
            0x0F, 0x4B, 0x7B, 0x00, 0x0F, 0x57, 0x9B, 0x00,
            0x00, 0xA7, 0xDB, 0x00, 0x27, 0x7B, 0xCF, 0x00,
            0x83, 0xBB, 0xFB, 0x00, 0x00, 0xBF, 0xEF, 0x00,
            0xA3, 0xCF, 0xEB, 0x00, 0x87, 0x6F, 0x6F, 0x00,
            0x7B, 0x63, 0x63, 0x00, 0x6F, 0x57, 0x57, 0x00,
            0x67, 0x4F, 0x4F, 0x00, 0x5B, 0x43, 0x43, 0x00,
            0x53, 0x3B, 0x3B, 0x00, 0x3B, 0x27, 0x27, 0x00,
            0x33, 0x4F, 0x93, 0x00, 0x27, 0x3F, 0x87, 0x00,
            0x1B, 0x2F, 0x7B, 0x00, 0x13, 0x23, 0x6F, 0x00,
            0x0B, 0x17, 0x5F, 0x00, 0x07, 0x0B, 0x53, 0x00,
            0x00, 0x07, 0x47, 0x00, 0x00, 0x00, 0x3B, 0x00,
            0xC7, 0xDB, 0xDB, 0x00, 0xAB, 0xC3, 0xC3, 0x00,
            0x93, 0xAB, 0xAB, 0x00, 0x7B, 0x93, 0x93, 0x00,
            0x67, 0x7F, 0x7F, 0x00, 0x4F, 0x67, 0x67, 0x00,
            0x3B, 0x4F, 0x4F, 0x00, 0x2B, 0x3B, 0x3B, 0x00,
            0x5B, 0x9F, 0xD7, 0x00, 0x4B, 0x8F, 0xCF, 0x00,
            0x3B, 0x73, 0xBF, 0x00, 0x27, 0x5B, 0xB3, 0x00,
            0x0F, 0x57, 0x9B, 0x00, 0x1B, 0x53, 0x8F, 0x00,
            0x0F, 0x47, 0x7B, 0x00, 0x00, 0x3F, 0x6F, 0x00,
            0x5B, 0x77, 0xA7, 0x00, 0x4F, 0x6F, 0x9B, 0x00,
            0x43, 0x63, 0x93, 0x00, 0x3B, 0x5B, 0x87, 0x00,
            0x33, 0x4F, 0x7F, 0x00, 0x27, 0x47, 0x73, 0x00,
            0x23, 0x3F, 0x6B, 0x00, 0x1B, 0x37, 0x5F, 0x00,
            0x13, 0x2F, 0x57, 0x00, 0x0F, 0x27, 0x4B, 0x00,
            0x0B, 0x23, 0x43, 0x00, 0x07, 0x1B, 0x3B, 0x00,
            0x00, 0x13, 0x2F, 0x00, 0x00, 0x0F, 0x27, 0x00,
            0x00, 0x0B, 0x1B, 0x00, 0x00, 0x07, 0x13, 0x00,
            0xEB, 0xFF, 0xFF, 0x00, 0xC7, 0xFB, 0xFF, 0x00,
            0xA7, 0xF3, 0xFF, 0x00, 0x83, 0xEB, 0xFF, 0x00,
            0x63, 0xDB, 0xFF, 0x00, 0x3F, 0xCB, 0xFF, 0x00,
            0x1F, 0xB7, 0xFF, 0x00, 0x00, 0x9F, 0xFF, 0x00,
            0x00, 0x7B, 0xE3, 0x00, 0x00, 0x5B, 0xC7, 0x00,
            0x00, 0x43, 0xAF, 0x00, 0x00, 0x2B, 0x93, 0x00,
            0x00, 0x1B, 0x7B, 0x00, 0x00, 0x0B, 0x5F, 0x00,
            0x00, 0x07, 0x43, 0x00, 0x00, 0x00, 0x2B, 0x00,
            0xEB, 0xDF, 0xDF, 0x00, 0xDB, 0xCB, 0xCB, 0x00,
            0xCB, 0xB7, 0xB7, 0x00, 0xBB, 0xA7, 0xA7, 0x00,
            0xAB, 0x97, 0x97, 0x00, 0x9F, 0x87, 0x87, 0x00,
            0x8F, 0x77, 0x77, 0x00, 0x7F, 0x67, 0x67, 0x00,
            0x6F, 0x57, 0x57, 0x00, 0x63, 0x4B, 0x4B, 0x00,
            0x53, 0x3F, 0x3F, 0x00, 0x43, 0x2F, 0x2F, 0x00,
            0x33, 0x23, 0x23, 0x00, 0x23, 0x17, 0x17, 0x00,
            0x1B, 0x0F, 0x0F, 0x00, 0xFF, 0xFF, 0xFF, 0x00
            };
    }
}